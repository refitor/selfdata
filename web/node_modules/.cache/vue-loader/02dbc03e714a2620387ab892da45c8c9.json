{"remainingRequest":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/src/pages/home.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/src/pages/home.vue","mtime":1651945413229},{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":1651945326012},{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":1651945387601},{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1651945377225},{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js","mtime":1651945212459},{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":1651945230823},{"path":"/home/jery/Desktop/dev/rshub/product/rsapp/selfdata/web/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":1651945387533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uYXYtaGVhZGVyLWxvZ297CiAgICBmb250LXNpemU6IDIwcHg7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIG1hcmdpbi10b3A6IDE1cHg7Cn0KLnRye3RleHQtYWxpZ246cmlnaHR9Ci5tdDEwewogICAgbWFyZ2luLXRvcDogMTBweDsKfQoubWVudS1pdGVtIHsKICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgZm9udC1zaXplOiAxNnB4Owp9Cg=="},{"version":3,"sources":["home.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/pages","sourcesContent":["<style lang=\"less\">\n.nav-header-logo{\n    font-size: 20px;\n    text-align: right;\n    margin-top: 15px;\n}\n.tr{text-align:right}\n.mt10{\n    margin-top: 10px;\n}\n.menu-item {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 16px;\n}\n</style>\n<template>\n    <div>\n        <Row style=\"height: 60px; background-color: #ebe9e7; vertical-align: middle;\">\n            <Col span=\"12\">\n                <div style=\"text-align: right;\"> \n                    <div class=\"nav-header-logo\">\n                        <Icon :type=\"activeIcon\" style=\"margin-right: 5px;\"/>{{activeTile}}\n                    </div>\n                </div>\n            </Col>\n            <Col span=\"12\">\n                <div style=\"text-align: right; margin-top: 5px;\"> \n                    <Button v-if=\"activePage === 'view'\" @click=\"returnPage()\" :icon=\"activePage === 'selfData' ? 'md-sync':'md-arrow-back'\" style=\"margin-top: 10px; margin-right: 10px;\"></Button>\n                    <!-- <Button @click=\"syncData()\" icon=\"md-lock\" style=\"margin-top: 10px; margin-right: 10px;\"></Button> -->\n                    <Button @click=\"openOperate()\" icon=\"md-open\" style=\"margin-top: 10px; margin-right: 10px;\"></Button>\n                    <Button @click=\"showMenu = true\" icon=\"ios-menu\" style=\"margin-top: 10px; margin-right: 10px;\"></Button>\n                </div>\n            </Col>\n        </Row>\n        <Drawer width=\"130\" :closable=\"false\" v-model=\"showMenu\" placement=\"left\">\n            <p class=\"menu-item\"><a href=\"javascript:void(0)\" @click=\"reload()\"><Icon type=\"md-unlock\" style=\"margin-right: 5px;\"/>{{$t('lang.decryption')}}</a></p>\n            <Divider />\n            <p class=\"menu-item\"><a href=\"javascript:void(0)\" @click=\"syncData()\"><Icon type=\"md-lock\" style=\"margin-right: 5px;\"/>{{$t('lang.encryption')}}</a></p>\n            <Divider />\n            <p class=\"menu-item\"><a href=\"javascript:void(0)\" @click=\"openConf()\"><Icon type=\"ios-settings\" style=\"margin-right: 5px;\"/>{{$t('lang.settings')}}</a></p>\n            <Divider />\n            <p class=\"menu-item\"><a href=\"javascript:void(0)\" @click=\"logout()\"><Icon type=\"md-exit\" style=\"margin-right: 5px;\"/>{{$t('lang.logout')}}</a></p>\n            <Divider />\n        </Drawer>\n        <div :style=\"{height: pageHeight() - 70 + 'px'}\">\n            <object v-if=\"activePage === 'page'\" :data=\"pageUrl\" width='100%' height='100%' style=\"padding-top: 10px; padding-left: 10px; padding-right: 10px;\"/>\n            <ConfPanel v-if=\"activePage === 'conf'\" ref=\"confPanel\" :formTitle=\"$t('lang.settings')\" :updateFile=\"updateFile\"></ConfPanel>\n            <!-- <ConfPanel v-if=\"activePage === 'conf'\" :params=\"pageParams\" style=\"padding: 10px;\"></ConfPanel> -->\n            <ExplorerPanel v-show=\"activePage === 'selfData'\" ref=\"selfdataPanel\" :beforeOpen=\"beforeOpen\" :from=\"'selfData'\" :readonly=\"false\" style=\"padding: 10px;\"></ExplorerPanel>\n            <EditorPanel v-if=\"activePage === 'view'\" ref=\"viewPanel\" :params=\"pageParams\" style=\"padding: 10px;\"></EditorPanel>\n        </div>\n        <Modal\n            v-model=\"uploadModal\"\n            :footer-hide=\"hideFooter\"\n            class-name=\"vertical-center-modal\">\n            <p style=\"text-align: center;margin-bottom: 10px;\">{{$t('lang.upload')}}{{$t('lang.file')}}</p>\n            <Upload\n                multiple\n                type=\"drag\"\n                :on-success=\"uploadSuccessed\"\n                :action=\"'/api/file/upload?from=' + activePage + '&path=' + activeSDPath\">\n                <div style=\"padding: 20px 0\">\n                    <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"></Icon>\n                    <p>Click or drag files here to upload</p>\n                </div>\n            </Upload>\n        </Modal>\n        <Modal\n            v-model=\"operateModal\"\n            :footer-hide=\"hideFooter\"\n            class-name=\"vertical-center-modal\">\n            <p style=\"text-align: center;margin: 5px;\">{{$t('lang.resOperate')}}</p>\n            <p style=\"text-align: left;margin: 10px 0;\">{{$t('lang.path')}}: /{{activePage === 'view'? activeFilePath:activeSDPath}}</p>\n            <Input v-if=\"canOperate('create-folder') || canOperate('create-file') || canOperate('rename')\" v-model=\"resOperate\" :placeholder=\"isEncryption() ? $t('lang.authIDPlaceholder') : $t('lang.operatePlaceholder')\">\n                <Select v-model=\"selectResKind\" slot=\"append\" style=\"width: 100px\" @on-select=\"selectOperate\" :placeholder=\"$t('lang.pleaseSelect')\">\n                    <Option v-show=\"canOperate('create-folder')\" value=\"create-folder\"><Icon type=\"md-add\"/> {{$t('lang.createFolder')}}</Option>\n                    <Option v-show=\"canOperate('create-file')\" value=\"create-file\"><Icon type=\"md-add\"/> {{$t('lang.createFile')}}</Option>\n                    <Option v-show=\"canOperate('rename')\" value=\"rename\"><Icon type=\"md-create\"/> {{$t('lang.rename')}}</Option>\n                </Select>\n            </Input>\n            <div style=\"text-align: center; margin-top: 5px;\"> \n                <Button v-show=\"canOperate('update')\" @click=\"updateFile()\" icon=\"md-sync\" type=\"info\" style=\"margin-top: 10px; margin-right: 10px;\">{{$t('lang.update')}}</Button>\n                <Button v-show=\"canOperate('upload')\" @click=\"uploadFile()\" type=\"success\" icon=\"md-cloud-upload\" style=\"margin-top: 10px; margin-right: 10px;\">{{$t('lang.upload')}}</Button>\n                <Button v-show=\"canOperate('delete')\" @click=\"operateRes('delete', activeSDPath, '')\" type=\"error\" icon=\"md-trash\" style=\"margin-top: 10px; margin-right: 10px;\">{{$t('lang.delete')}}</Button>\n            </div>\n        </Modal>\n    </div>\n</template>\n<script>\nimport ConfPanel from './conf.vue';\nimport EditorPanel from './editor.vue';\nimport ExplorerPanel from './explorer.vue';\nimport {webResponse} from '../toolchain/help.js';\nexport default {\n    inject: [\"reload\"],\n    data(){\n        return {\n            operateModal: false,\n            uploadModal: false,\n            hideFooter: true,\n\n            showMenu: false,\n            activeTile: this.$t('lang.selfdata'),\n            activePage: 'selfData',\n            activeIcon: 'md-unlock',\n\n            pageUrl: '',\n            pageParams: {},\n            resRootDir: 'encryption',\n            activeSDPath: 'encryption',\n            activeFilePath: '',\n\n            // operate\n            resOperate: '',\n            activeOperate: '',\n            selectResKind: '',\n\n            // conf\n            confData: {},\n        }\n    },\n    mounted() {\n        let self = this;\n        if (this.$route.query.page === undefined) {\n            this.httpGet('/api/user/status', function(response){\n                webResponse(response, function(response){\n                    self.$router.push({path: '/auth'})\n                }, function(response){\n                    self.init()\n                })\n            })\n        } else {\n            self.init()\n        }\n    },\n    methods:{\n        init() {\n            var page = this.$route.query.page;\n            var from = this.$route.query.from;\n            var ftype = this.$route.query.ftype;\n            var readonly = this.$route.query.readonly;\n            var filePath = this.$route.query.filepath;\n            if (page === 'view') {\n                this.activeFilePath = filePath;\n                window.location.hash = '#/';\n                if (from !== undefined) this.pageParams['from'] = from;\n                if (ftype !== undefined) this.pageParams['fType'] = ftype;\n                if (readonly !== undefined) this.pageParams['readonly'] = readonly;\n                if (filePath !== undefined) this.pageParams['filePath'] = filePath;\n                this.openPage('view', this.$t('lang.fpreview'), 'ios-paper');\n            } else if (page === 'conf') {\n                this.openPage('conf', this.$t('lang.settings'), 'ios-settings');\n            } else {\n                this.initConf();\n                this.openPage('selfData', this.$t('lang.selfdata'), 'md-unlock');\n            }\n        },\n        initConf() {\n            let self = this;\n            let fileUrl = '/api/file/view?filepath=encryption/meta.json' + '&from=selfdata';\n            this.httpGet(fileUrl, function(response) {\n                if (response.data['Error'] !== '' && response.data['Error'] !== null && response.data['Error'] !== undefined) {\n                    self.$Message.error(response.data['Error'])\n                    self.close()\n                } else {\n                    self.confData = response.data;\n                }\n            }, null);\n        },\n        isEncryption() {\n            let sysRight = this.confData[\"SysRight\"] + '';\n            if (sysRight.indexOf('strong') >= 0) {\n                let workPath = this.activeSDPath;\n                if (workPath === undefined || workPath === '') workPath = 'encryption';\n                console.log('-----------', workPath)\n                // console.log(this.$route.path, this.activeSDPath, workPath)\n                return workPath === 'encryption' && this.activePage !== 'view'\n            }\n            return false\n        },\n        isRoot() {\n            let workPath = this.activeSDPath;\n            if (workPath === undefined) workPath = 'encryption';\n            // console.log(this.$route.path, this.activeSDPath, workPath)\n            return workPath.split('/').length === 2 && this.activePage !== 'view'\n        },\n        isFolder() {\n            let workPath = this.activeSDPath;\n            if (workPath === undefined) workPath = 'encryption';\n            // console.log(this.$route.path, this.activeSDPath, workPath)\n            return workPath.split('/').length > 2 && this.activePage !== 'view'\n        },\n        getState(attr) {\n            if (attr === 'isRoot') return this.isRoot();\n            else if (attr === 'isFolder') return this.isFolder();\n        },\n        openConf() {\n            this.openPage('conf', this.$t('lang.settings'), 'ios-settings')\n            // this.openPage('conf', this.$t('lang.settings'), 'ios-settings');\n            // window.location.href = '/api/file/preview?page=view&readonly=false&filepath=encryption/meta.json&from=selfData'\n        },\n        openPage(name, title, icon, pageUrl) {\n            if (pageUrl !== undefined) this.pageUrl = pageUrl;\n            this.activeTile = title;\n            this.activePage = name;\n            this.activeIcon = icon;\n            this.showMenu = false;\n        },\n        beforeOpen(resPath) {\n            if (resPath === undefined) return true;\n            if (this.isRoot()) this.operateRes('decrypt', resPath, '') \n            localStorage.setItem('redirect', resPath)\n            this.activeSDPath = resPath;\n            return true\n        },\n        returnPage() {\n            window.location.hash = '/';\n            if (this.activePage === 'view') {\n                this.openPage('selfData', this.$t('lang.selfdata'), 'md-unlock');\n                this.$refs.selfdataPanel.render();\n                return\n            }\n            this.reload()\n        },\n        canOperate(kind) {\n            let redirect = localStorage.getItem('redirect');\n            if (redirect !== null && redirect !== undefined && redirect !== '') {\n                this.activeSDPath = redirect;\n                // localStorage.removeItem('redirect');\n            }\n            switch (kind) {\n                case 'create-folder':\n                    return this.isEncryption() || this.isRoot() || this.isFolder()\n                case 'create-file':\n                    return this.isFolder()\n                case 'rename':\n                    return this.activePage === 'view' || this.isFolder()\n                case 'update':\n                    return this.activePage === 'view'\n                case 'upload':\n                    return this.isFolder()\n                case 'delete':\n                   return this.activePage === 'view' || this.isFolder()\n            }\n            return false\n        },\n        openOperate() {\n            this.operateModal = true;\n        },\n        uploadFile() {\n            this.uploadModal = true;\n        },\n        uploadSuccessed(response, file, fileList) {\n            this.reload()\n        },\n        selectOperate(op) {\n            if (op.value === 'create-folder' || op.value === 'create-file' || op.value === 'rename') {\n                if (this.resOperate === '') {\n                    this.$Message.error(this.$t('lang.operateEditError'))\n                    return\n                }\n            }\n            this.operateRes(op.value, this.activeSDPath, this.resOperate)\n        },\n        syncData() {\n            let self = this;\n            self.$Modal.confirm({\n                title: self.$t('lang.sdSync'),\n                content: self.$t('lang.selfdataSync') + ', ' + self.$t('lang.syncConfirm') + '?',\n                okText: self.$t('lang.ok'),\n                cancelText: self.$t('lang.cancel'),\n                onOk: () => { \n                    console.log('encrypt: ' + self.activeSDPath)\n                    self.operateRes('encrypt', self.activeSDPath, '') \n                },\n            })\n        },\n        updateFile(path, data) {\n            if (path === undefined && data === undefined) {\n                path = this.$refs.viewPanel.filePath;\n                data = this.$refs.viewPanel.getContent();\n            }\n            this.operateRes('update', path, data)\n        },\n        // kind: create-folder, create-file, delete, update, decrypt\n        operateRes(kind, path, data) {\n            if (this.activePage === 'view') path = this.activeFilePath;\n\n            let self = this;\n            let formdata = new FormData();\n            formdata.append('path', path)\n            formdata.append('data', data)\n            formdata.append('kind', kind)\n            this.httpPost('/api/resource/operate', formdata, function(response){\n                webResponse(response, function(err){\n                    self.$Message.error(err)    \n                }, function(response){\n                    if (response.data['Data'] !== 'pass') {\n                        self.$Message.success(self.$t('lang.resOperateOK'))\n                        self.reload()\n                    }\n                })\n            })\n        },\n        logout() {\n            this.httpGet('/api/user/logout', function(response){\n                localStorage.removeItem('isLogin')\n                localStorage.removeItem('redirect')\n                window.location.reload()\n            }, function(response){\n                localStorage.removeItem('isLogin')\n                localStorage.removeItem('redirect')\n                window.location.reload()\n            })\n        },\n        pageHeight(){ //函数：获取尺寸\n            //获取浏览器窗口高度\n            var winHeight=0;\n            if (window.innerHeight){\n                winHeight = window.innerHeight;\n            }\n            else if ((document.body) && (document.body.clientHeight)){\n                winHeight = document.body.clientHeight;\n            }\n            //通过深入Document内部对body进行检测，获取浏览器窗口高度\n            if (document.documentElement && document.documentElement.clientHeight){\n                winHeight = document.documentElement.clientHeight;\n            }\n            //DIV高度为浏览器窗口的高度\n            //document.getElementById(\"test\").style.height= winHeight +\"px\";\n            //DIV高度为浏览器窗口高度的一半\n            // document.getElementById(\"test\").style.height= winHeight/2 +\"px\";\n            return winHeight;\n        },\n        httpGet(url, onResponse, onPanic) {\n            this.$axios.get(url)\n            .then(function (response) {\n                if (onResponse !== undefined && onResponse !== null) onResponse(response);\n            })\n            .catch(function (response) {\n                if (onPanic !== undefined && onPanic !== null) onPanic(response);\n            });\n        },\n        httpPost(url, formdata, onResponse, onPanic) {\n            this.$axios.post(url, formdata)\n            .then(function (response) {\n                if (onResponse !== undefined && onResponse !== null) onResponse(response);\n            })\n            .catch(function (response) {\n                if (onPanic !== undefined && onPanic !== null) onPanic(response);\n            });\n        }\n    },\n    components: {\n        ConfPanel,\n        EditorPanel,\n        ExplorerPanel,\n    }\n}\n</script>\n"]}]}