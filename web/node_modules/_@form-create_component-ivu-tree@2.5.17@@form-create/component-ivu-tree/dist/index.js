/*!
 * @form-create/component-ivu-tree v2.5.17
 * (c) 2018-2022 xaboy
 * Github https://github.com/xaboy/form-create with @form-create/component-ivu-tree
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).FcTree=t()}(this,function(){"use strict";function e(){return(e=Object.assign||function(e){for(var t,n=1;n<arguments.length;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)}var t=["attrs","props","domProps"],n=["class","style","directives"],r=["on","nativeOn"],i=function(e,t){return function(){e&&e.apply(this,arguments),t&&t.apply(this,arguments)}},c=function(c){return c.reduce(function(c,o){for(var s in o)if(c[s])if(-1!==t.indexOf(s))c[s]=e({},c[s],o[s]);else if(-1!==n.indexOf(s)){var a=c[s]instanceof Array?c[s]:[c[s]],f=o[s]instanceof Array?o[s]:[o[s]];c[s]=a.concat(f)}else if(-1!==r.indexOf(s))for(var u in o[s])if(c[s][u]){var d=c[s][u]instanceof Array?c[s][u]:[c[s][u]],h=o[s][u]instanceof Array?o[s][u]:[o[s][u]];c[s][u]=d.concat(h)}else c[s][u]=o[s][u];else if("hook"==s)for(var p in o[s])c[s][p]=c[s][p]?i(c[s][p],o[s][p]):o[s][p];else c[s]=o[s];else c[s]=o[s];return c},{})};return{name:"fcTree",props:{formCreateInject:{type:Object,required:!0},type:{type:String,default:"checked"},value:{type:[Array,String,Number],default:function(){return[]}}},data:function(){return{treeData:[]}},watch:{value:function(e){this.setStatus(e)}},created:function(){this.setStatus(this.value)},methods:{setStatus:function(e){var t=function(e){return Array.isArray(e)?e:[null,void 0,""].indexOf(e)>-1?[]:[e]}(e),n=this.formCreateInject.prop.props.data;"selected"===this.type?this.checked(n,t,"selected"):this.checked(n,t,"checked"),this.$forceUpdate()},checked:function(e,t,n){var r=this;e.forEach(function(e){r.$set(e,n,-1!==t.indexOf(e.id)),void 0!==e.children&&Array.isArray(e.children)&&r.checked(e.children,t,n)})},onInput:function(e){this.$emit("input",e.map(function(e){return e.id}))}},render:function(){var e,t,n=arguments[0],r={};return"selected"===this.type?r["on-select-change"]=this.onInput:r["on-check-change"]=this.onInput,n("Tree",c([{},this.formCreateInject.prop,{ref:"tree"},{on:r}]),[(e=this.$slots,Object.keys(e).reduce(function(n,r){return t&&-1!==t.indexOf(r)||n.push(e[r]),n},[]))])}}});
//# sourceMappingURL=index.js.map
