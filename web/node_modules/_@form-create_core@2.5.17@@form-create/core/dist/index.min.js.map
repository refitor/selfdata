{"version":3,"file":"index.min.js","sources":["../../utils/lib/modify.js","../../utils/lib/extend.js","../src/components/formCreate.js","../../utils/lib/type.js","../../utils/lib/mergeprops.js","../src/frame/attrs.js","../../utils/lib/console.js","../../utils/lib/deepextend.js","../../utils/lib/json.js","../src/frame/util.js","../src/factory/creator.js","../src/factory/maker.js","../src/frame/api.js","../src/render/cache.js","../../utils/lib/tocase.js","../../utils/lib/toarray.js","../../utils/lib/tostring.js","../../utils/lib/toline.js","../../utils/lib/unique.js","../../utils/lib/deepset.js","../src/render/render.js","../src/render/index.js","../src/handler/inject.js","../src/handler/page.js","../src/handler/render.js","../src/factory/context.js","../src/handler/loader.js","../src/handler/input.js","../src/factory/parser.js","../src/handler/context.js","../src/handler/lifecycle.js","../src/handler/effect.js","../src/handler/index.js","../src/frame/fetch.js","../src/components/fragment.js","../src/factory/node.js","../src/factory/manager.js","../src/frame/provider.js","../src/frame/index.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n","import {$set} from './modify';\n\nconst _extends = Object.assign || function (a) {\n    for (let b, c = 1; c < arguments.length; c++) {\n        for (let d in b = arguments[c], b) {\n            Object.prototype.hasOwnProperty.call(b, d) && ($set(a, d, b[d]));\n        }\n    }\n\n    return a;\n}\n\nexport default function extend() {\n    return _extends.apply(this, arguments);\n}\n\nexport function copy(obj) {\n    if (typeof obj !== 'object' || obj === null) return obj;\n    return obj instanceof Array ? [...obj] : {...obj};\n}\n","import extend from '@form-create/utils/lib/extend';\n\nconst NAME = 'FormCreate';\n\nexport default function $FormCreate(FormCreate) {\n    return {\n        name: NAME,\n        componentName: NAME,\n        model: {\n            prop: 'api'\n        },\n        provide() {\n            return {\n                $pfc: this,\n            }\n        },\n        inject: {$pfc: {default: null}},\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                }\n            },\n            extendOption: Boolean,\n            value: Object,\n            api: Object,\n        },\n        data() {\n            return {\n                formData: undefined,\n                destroyed: false,\n                validate: {},\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n                renderRule: [...this.rule || []],\n                ctxInject: {},\n                updateValue: ''\n            };\n        },\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _refresh() {\n                ++this.unique;\n            },\n            _renderRule() {\n                this.renderRule = [...this.rule || []];\n            },\n            _updateValue(value) {\n                if (this.destroyed) return;\n                this.updateValue = JSON.stringify(value);\n                this.$emit('update:value', value);\n            }\n        },\n        watch: {\n            value: {\n                handler(n) {\n                    if (JSON.stringify(n) === this.updateValue) return;\n                    this.$f.setValue(n);\n                },\n                deep: true\n            },\n            option: {\n                handler(n) {\n                    this.formCreate.initOptions(n);\n                    this.$f.refresh();\n                },\n                deep: true\n            },\n            rule(n) {\n                if (n.length === this.renderRule.length && n.every(v => this.renderRule.indexOf(v) > -1)) return;\n                this.formCreate.$handle.reloadRule(n);\n                this._renderRule();\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(this, rule, option);\n            Object.keys(this.formCreate.prop).forEach(k => {\n                extend(this.$options[k], this.formCreate.prop[k]);\n            })\n            this.$emit('beforeCreate', this.formCreate.api());\n        },\n    }\n}\n","const is = {\n    type(arg, type) {\n        return Object.prototype.toString.call(arg) === '[object ' + type + ']'\n    },\n    Undef(v) {\n        return v === undefined || v === null\n    },\n    Element(arg) {\n        return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !is.Object(arg)\n    },\n    trueArray(data) {\n        return Array.isArray(data) && data.length > 0;\n    }\n};\n\n['Date', 'Object', 'Function', 'String', 'Boolean', 'Array', 'Number'].forEach(t => {\n    is[t] = function (arg) {\n        return is.type(arg, t);\n    }\n})\n\nexport function hasProperty(rule, k) {\n    return ({}).hasOwnProperty.call(rule, k)\n}\n\nexport default is;\n","export const normalMerge = ['attrs', 'props', 'domProps', 'scopedSlots'];\nexport const toArrayMerge = ['class', 'style', 'directives'];\nexport const functionalMerge = ['on', 'nativeOn'];\n\nconst mergeProps = (objects, initial = {}, opt = {}) => {\n    const _normalMerge = [...normalMerge, ...opt['normal'] || []];\n    const _toArrayMerge = [...toArrayMerge, ...opt['array'] || []];\n    const _functionalMerge = [...functionalMerge, ...opt['functional'] || []];\n    const propsMerge = opt['props'] || [];\n\n    return objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (propsMerge.indexOf(key) > -1) {\n                    a[key] = mergeProps([b[key]], a[key]);\n                } else if (_normalMerge.indexOf(key) > -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (_functionalMerge.indexOf(key) > -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                if (_normalMerge.indexOf(key) > -1 || _functionalMerge.indexOf(key) > -1 || propsMerge.indexOf(key) > -1) {\n                    a[key] = {...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    a[key] = b[key] instanceof Array ? [...b[key]] : (typeof b[key] === 'object' ? {...b[key]} : b[key]);\n                } else\n                    a[key] = b[key];\n            }\n        }\n        return a\n    }, initial);\n}\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeProps;\n","import {functionalMerge, normalMerge, toArrayMerge} from '@form-create/utils/lib/mergeprops';\n\n\nexport const keyAttrs = ['type', 'slot', 'emitPrefix', 'value', 'name', 'native', 'hidden', 'display', 'inject', 'options', 'emit', 'nativeEmit', 'link', 'prefix', 'suffix', 'update', 'sync', 'optionsTo', 'key'];\n\nexport const arrayAttrs = ['validate', 'children', 'control'];\n\nexport const normalAttrs = ['effect', 'deep'];\n\nexport function attrs() {\n    return [...keyAttrs, ...normalMerge, ...toArrayMerge, ...functionalMerge, ...arrayAttrs, ...normalAttrs];\n}\n","export function format(type, msg, rule) {\n    return (`[form-create ${type}]: ${msg}` + (rule ? ('\\n\\nrule: ' + JSON.stringify(rule.getRule ? rule.getRule() : rule)) : ''))\n}\n\nexport function tip(msg, rule) {\n    console.warn(format('tip', msg, rule));\n}\n\nexport function err(msg, rule) {\n    console.error(format('err', msg, rule));\n}\n\nexport function logError(e) {\n    err(e.toString());\n    console.error(e);\n}\n","import {$set} from './modify';\nimport is from './type';\n\nexport default function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || is.Object(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone && mode !== undefined) {\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone._clone());\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                origin[key] = deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n                if (!is.Undef(clone)) {\n                    if (!is.Undef(clone.__json)) {\n                        origin[key].__json = clone.__json;\n                    }\n                    if (!is.Undef(clone.__origin)) {\n                        origin[key].__origin = clone.__origin;\n                    }\n                }\n            }\n        }\n    }\n    return (mode !== undefined && Array.isArray(origin)) ? origin.filter(v => !v || !v.__ctrl) : origin\n}\n\nexport function deepCopy(value) {\n    return deepExtend({}, {value}).value;\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n","import deepExtend from './deepextend';\nimport {err} from './console';\nimport is, {hasProperty} from './type';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nconst $T = '$FN:';\nconst $TX = '$FNX:';\nconst FUNCTION = 'function';\n\nexport function toJson(obj, space) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== FUNCTION) {\n            return val;\n        }\n        if (val.__json) {\n            return val.__json;\n        }\n        if (val.__origin)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n        return PREFIX + val + SUFFIX;\n    }, space);\n}\n\nfunction makeFn(fn) {\n    return eval('(' + FUNCTION + '(){return ' + fn + ' })()')\n}\n\nexport function parseFn(fn, mode) {\n    if (fn && is.String(fn) && fn.length > 4) {\n        let v = fn.trim();\n        let flag = false;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                flag = true;\n            } else if (v.indexOf($T) === 0) {\n                v = v.replace($T, '');\n                flag = true;\n            } else if (v.indexOf($TX) === 0) {\n                v = makeFn('function($inject){' + v.replace($TX, '') + '}');\n                v.__json = fn;\n                v.__inject = true;\n                return v;\n            } else if (!mode && v.indexOf(FUNCTION) === 0 && v !== FUNCTION) {\n                flag = true;\n            }\n            if (!flag) return fn;\n            const val = makeFn((v.indexOf(FUNCTION) === -1 && v.indexOf('(') !== 0) ? (FUNCTION + ' ' + v) : v);\n            val.__json = fn;\n            return val;\n        } catch (e) {\n            err(`解析失败:${v}\\n\\nerr: ${e}`);\n            return undefined;\n        }\n    }\n    return fn;\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (is.Undef(v) || !v.indexOf) return v;\n        return parseFn(v, mode);\n    });\n}\n","import is from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {arrayAttrs, normalAttrs} from './attrs';\nimport {logError} from '@form-create/utils/lib/console';\nimport {parseJson, toJson} from '@form-create/utils/lib/json';\nimport deepExtend from '@form-create/utils/lib/deepextend';\n\nexport {parseFn} from '@form-create/utils/lib/json';\nexport {parseJson, toJson}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\n//todo 优化位置\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], [...rules], mode || false);\n}\n\nexport function mergeRule(rule, merge) {\n    mergeProps(Array.isArray(merge) ? merge : [merge], rule, {array: arrayAttrs, normal: normalAttrs});\n    return rule;\n}\n\nexport function getRule(rule) {\n    return is.Function(rule.getRule) ? rule.getRule() : rule;\n}\n\nexport function mergeGlobal(target, merge) {\n    if (!target) return merge;\n    Object.keys(merge || {}).forEach((k) => {\n        if (merge[k]) {\n            target[k] = mergeRule(target[k] || {}, merge[k])\n        }\n    });\n    return target;\n}\n\nexport function funcProxy(that, proxy) {\n    Object.defineProperties(that, Object.keys(proxy).reduce((initial, k) => {\n        initial[k] = {\n            get() {\n                return proxy[k]();\n            }\n        }\n        return initial;\n    }, {}))\n}\n\nexport function byCtx(rule) {\n    return rule.__fc__ || (rule.__origin__ ? rule.__origin__.__fc__ : null)\n}\n\nexport function invoke(fn, def) {\n    try {\n        def = fn()\n    } catch (e) {\n        logError(e);\n    }\n    return def;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {attrs} from '../frame/attrs';\nimport {copyRule, mergeRule} from '../frame/util';\nimport {$set} from '@form-create/utils/lib/modify';\n\nexport function baseRule() {\n    return {\n        props: {},\n        on: {},\n        options: [],\n        children: [],\n        hidden: false,\n        display: true,\n        value: undefined,\n    };\n}\n\nexport function creatorFactory(name, init) {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (init) {\n            if (is.Function(init)) init(maker);\n            else maker.props(init);\n        }\n        return maker;\n    };\n}\n\nexport default function Creator(type, title, field, value, props) {\n    this._data = extend(baseRule(), {type, title, field, value, props: props || {}});\n    this.event = this.on;\n}\n\nextend(Creator.prototype, {\n    getRule() {\n        return this._data;\n    },\n    setProp(key, value) {\n        $set(this._data, key, value);\n        return this;\n    },\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = copyRule(this._data);\n        return clone;\n    },\n})\n\nexport function appendProto(attrs) {\n    attrs.forEach(name => {\n        Creator.prototype[name] = function (key) {\n            mergeRule(this._data, {[name]: arguments.length < 2 ? key : {[key]: arguments[1]}})\n            return this;\n        };\n    });\n}\n\nappendProto(attrs());\n","import {creatorFactory} from './creator';\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    return {\n        create,\n        createTmp,\n        template: createTmp,\n        factory: creatorFactory\n    };\n}\n","import {byCtx, invoke, mergeRule, toJson} from './util';\nimport {$set} from '@form-create/utils/lib/modify';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport extend from '@form-create/utils/lib/extend';\nimport {format} from '@form-create/utils/lib/console';\n\n\nfunction copy(value) {\n    return deepCopy(value);\n}\n\nexport default function Api(h) {\n\n    function tidyFields(fields) {\n        if (is.Undef(fields))\n            fields = h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    function props(fields, key, val) {\n        tidyFields(fields).forEach(field => {\n            h.getCtxs(field).forEach(ctx => {\n                $set(ctx.rule, key, val);\n                h.$render.clearCache(ctx);\n            });\n        })\n    }\n\n    function allSubForm() {\n        const subs = h.subForm;\n        return Object.keys(subs).reduce((initial, k) => {\n            const sub = subs[k];\n            if (!sub) return initial;\n            if (Array.isArray(sub))\n                initial.push(...sub);\n            else\n                initial.push(sub);\n            return initial;\n        }, []);\n    }\n\n    const api = {\n        get config() {\n            return h.options\n        },\n        get options() {\n            return h.options\n        },\n        get form() {\n            return h.form\n        },\n        get rule() {\n            return h.rules\n        },\n        get parent() {\n            return h.vm.$pfc && h.vm.$pfc.$f\n        },\n        get children() {\n            return allSubForm();\n        },\n        formData(fields) {\n            return tidyFields(fields).reduce((initial, id) => {\n                const ctx = h.getFieldCtx(id);\n                if (!ctx) return initial;\n                initial[ctx.field] = copy(ctx.rule.value);\n                return initial;\n            }, copy(h.appendData));\n        },\n        getValue(field) {\n            const ctx = h.getFieldCtx(field);\n            if (!ctx) return;\n            return copy(ctx.rule.value);\n        },\n        coverValue(formData) {\n            h.deferSyncValue(() => {\n                api.fields().forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    const flag = hasProperty(formData, key);\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = flag ? formData[key] : undefined;\n                    })\n                });\n            })\n        },\n        setValue(field) {\n            let formData = field;\n            if (arguments.length >= 2)\n                formData = {[field]: arguments[1]};\n            h.deferSyncValue(() => {\n                Object.keys(formData).forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = formData[key];\n                    });\n                });\n            })\n        },\n        removeField(field) {\n            const ctx = h.getCtx(field);\n            h.deferSyncValue(() => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rm();\n                });\n            }, true);\n            return ctx ? ctx.origin : undefined;\n        },\n        removeRule(rule) {\n            const ctx = rule && byCtx(rule);\n            if (!ctx) return;\n            ctx.rm();\n            return ctx.origin;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, child) => {\n            let index = h.sort.length - 1, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                    index = ctx.rule.children.length - 1;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, child) => {\n            let index = 0, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(state, fields) {\n            props(fields, 'hidden', !!state);\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.hidden;\n        },\n        display(state, fields) {\n            props(fields, 'display', !!state);\n            h.refresh();\n        },\n        displayStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.display;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields).forEach((field) => {\n                h.getCtxs(field).forEach(ctx => {\n                    $set(ctx.rule.props, 'disabled', !!disabled);\n                });\n            });\n            h.refresh();\n        },\n        all(origin) {\n            return Object.keys(h.ctxs).map(k => {\n                const ctx = h.ctxs[k];\n                return origin ? ctx.origin : ctx.rule;\n            });\n        },\n        model(origin) {\n            return h.fields().reduce((initial, key) => {\n                const ctx = h.fieldCtx[key][0];\n                initial[key] = origin ? ctx.origin : ctx.rule;\n                return initial;\n            }, {});\n        },\n        component(origin) {\n            return Object.keys(h.nameCtx).reduce((initial, key) => {\n                const ctx = h.nameCtx[key].map(ctx => origin ? ctx.origin : ctx.rule);\n                initial[key] = ctx.length === 1 ? ctx[0] : ctx;\n                return initial;\n            }, {});\n        },\n        bind() {\n            return api.form;\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            h.fc.updateOptions(options);\n            api.refresh();\n        },\n        onSubmit(fn) {\n            api.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            if (Array.isArray(field)) {\n                field.forEach(v => api.sync(v));\n                return;\n            }\n            let ctxs = is.Object(field) ? byCtx(field) : h.getCtxs(field);\n            if (!ctxs) {\n                return;\n            }\n            ctxs = Array.isArray(ctxs) ? ctxs : [ctxs];\n            ctxs.forEach(ctx => {\n                if (!ctx.deleted) {\n                    const subForm = h.subForm[ctx.id];\n                    if (subForm) {\n                        if (Array.isArray(subForm)) {\n                            subForm.forEach(form => {\n                                form.refresh();\n                            })\n                        } else if (subForm) {\n                            subForm.refresh();\n                        }\n                    }\n                    //ctx.updateKey(true);\n                    h.$render.clearCache(ctx);\n                }\n            });\n            h.refresh();\n        },\n        refresh: () => {\n            allSubForm().forEach(sub => {\n                sub.refresh();\n            });\n            h.$render.clearCacheAll();\n            h.refresh();\n        },\n        refreshOptions() {\n            h.$manager.updateOptions(h.options);\n            api.refresh();\n        },\n        hideForm: (hide) => {\n            $set(h.vm, 'isShow', !hide);\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule(id, rule) {\n            h.getCtxs(id).forEach(ctx => {\n                extend(ctx.rule, rule);\n            });\n        },\n        updateRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.updateRule(id, rules[id]);\n            })\n        },\n        mergeRule: (id, rule) => {\n            h.getCtxs(id).forEach(ctx => {\n                mergeRule(ctx.rule, rule);\n            });\n        },\n        mergeRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.mergeRule(id, rules[id]);\n            })\n        },\n        getRule: (id, origin) => {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                return origin ? ctx.origin : ctx.rule;\n            }\n        },\n        updateValidate(id, validate, merge) {\n            if (merge) {\n                api.mergeRule(id, {validate})\n            } else {\n                props(id, 'validate', validate);\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                api.updateValidate(id, validates[id], merge);\n            })\n        },\n        refreshValidate() {\n            h.vm.validate = {};\n            api.refresh();\n        },\n        resetFields(fields) {\n            tidyFields(fields).forEach(field => {\n                h.getCtxs(field).forEach(ctx => {\n                    h.$render.clearCache(ctx);\n                    ctx.rule.value = copy(ctx.defaultValue);\n                    h.refreshControl(ctx);\n                });\n            });\n        },\n        method(id, name) {\n            const el = api.el(id);\n            if (!el || !el[name])\n                throw new Error(format('err', `${name}方法不存在`));\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        exec(id, name, ...args) {\n            return invoke(() => api.method(id, name)(...args));\n        },\n        toJson(space) {\n            return toJson(api.rule, space);\n        },\n        trigger(id, event, ...args) {\n            const el = api.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const ctx = h.getCtx(id);\n            if (ctx) return ctx.el || h.vm.$refs[ctx.ref];\n        },\n        closeModal: (id) => {\n            const el = api.el(id);\n            el && el.$emit && el.$emit('close-modal');\n        },\n        getSubForm(field) {\n            const ctx = h.getCtx(field);\n            return ctx ? h.subForm[ctx.id] : undefined;\n        },\n        nextTick(fn) {\n            h.bus.$once('next-tick', fn);\n            h.refresh();\n        },\n        nextRefresh(fn) {\n            h.nextRefresh();\n            fn && invoke(fn);\n        },\n        emit(name, ...args) {\n            h.vm.$emit(name, ...args);\n        },\n        helper: {\n            tidyFields, props\n        }\n    };\n\n    ['on', 'once', 'off', 'set'].forEach(n => {\n        api[n] = function (...args) {\n            h.vm[`$${n}`](...args);\n        }\n    });\n\n    api.changeValue = api.changeField = api.setValue;\n\n    return api;\n}\n","import extend from '@form-create/utils/lib/extend';\n\nexport default function useCache(Render) {\n    extend(Render.prototype, {\n        initCache() {\n            this.clearCacheAll();\n        },\n        clearCache(ctx) {\n            if (!this.cache[ctx.id]) {\n                ctx.parent && this.clearCache(ctx.parent);\n                return;\n            }\n            if (this.cache[ctx.id].use === true || this.cache[ctx.id].parent) {\n                this.$handle.refresh();\n            }\n            const parent = this.cache[ctx.id].parent;\n            this.cache[ctx.id] = null;\n            parent && this.clearCache(parent);\n        },\n        clearCacheAll() {\n            this.cache = {};\n        },\n        setCache(ctx, vnode, parent) {\n            this.cache[ctx.id] = {\n                vnode,\n                use: false,\n                parent,\n                slot: ctx.rule.slot\n            };\n        },\n        getCache(ctx) {\n            const cache = this.cache[ctx.id];\n            cache.use = true;\n            return cache.vnode;\n        }\n    })\n\n}\n","export default function toCase(str) {\n    const to = str.replace(/(-[a-z])/g, function (v) {\n        return v.replace('-', '').toLocaleUpperCase();\n    });\n\n    return lower(to);\n}\n\nexport function lower(str) {\n    return str.replace(str[0], str[0].toLowerCase());\n}\n","export default function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ([null, undefined, ''].indexOf(value) > -1 ? [] : [value]);\n}\n","export default function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n","export default function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLocaleLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n","let id = 0;\n\nexport default function uniqueId() {\n    return Math.random().toString(36).substr(3, 3) + Number(`${Date.now()}${++id}`).toString(36);\n}\n","export default function deepSet(data, idx, val) {\n    let _data = data, to;\n    (idx || '').split('.').forEach(v => {\n        if (to) {\n            if (!_data[to] || typeof _data[to] != 'object') {\n                _data[to] = {}\n            }\n            _data = _data[to];\n        }\n        to = v;\n    })\n    _data[to] = val;\n    return _data;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {_vue as Vue} from '../frame';\nimport {tip} from '@form-create/utils/lib/console';\nimport {invoke, mergeRule} from '../frame/util';\nimport toCase, {lower} from '@form-create/utils/lib/tocase';\nimport {$set, deepSet, toLine} from '@form-create/utils';\n\nexport default function useRender(Render) {\n    extend(Render.prototype, {\n        initRender() {\n            this.tempList = {};\n            this.clearOrgChildren();\n        },\n        initOrgChildren() {\n            const ctxs = this.$handle.ctxs;\n            this.orgChildren = Object.keys(ctxs).reduce((initial, id) => {\n                if (ctxs[id].parser.loadChildren !== false) {\n                    const children = ctxs[id].rule.children;\n                    initial[id] = is.trueArray(children) ? [...children] : [];\n                }\n\n                return initial;\n            }, {});\n\n        },\n        clearOrgChildren() {\n            this.orgChildren = {};\n        },\n        getTypeSlot(type) {\n            const name = 'type-' + toLine(type);\n            const _fn = (vm) => {\n                if (vm) {\n                    const slot = vm.$scopedSlots[name] || vm.$scopedSlots['type-' + type];\n                    if (slot) {\n                        return slot;\n                    }\n                    return _fn(vm.$pfc);\n                }\n            }\n            return _fn(this.vm);\n        },\n        render() {\n            if (!this.vm.isShow) {\n                return;\n            }\n            this.$h = this.vm.$createElement;\n            this.$manager.beforeRender();\n\n            let vn;\n\n            const make = () => this.renderList();\n            make.renderSlot = slot => this.renderList(slot);\n            make.renderName = name => this.renderId(name);\n            make.renderField = field => this.renderId(field, 'field');\n\n            if (this.vm.$scopedSlots.container) {\n                vn = [this.vm.$scopedSlots.container(make)];\n            } else {\n                vn = make();\n            }\n            return this.$manager.render(vn);\n        },\n        renderList(slot) {\n            return this.sort.map((id) => {\n                return slot ? this.renderSlot(this.$handle.ctxs[id], slot) : this.renderCtx(this.$handle.ctxs[id]);\n            }).filter((val) => val !== undefined);\n        },\n        makeVm(rule) {\n            const vm = rule.vm;\n            if (!vm)\n                return new Vue;\n            else if (is.Function(vm))\n                return invoke(() => rule.vm(this.$handle.getInjectData(rule)));\n            else if (!vm._isVue)\n                return new Vue(vm);\n            return vm;\n        },\n        mergeGlobal(ctx) {\n            const g = this.$handle.options.global;\n            if (!g) return;\n            //todo 缓存配置,更新 option 更新\n            if (!ctx.cacheConfig)\n                ctx.cacheConfig = g[ctx.originType] || g[ctx.type] || g[ctx.trueType] || {};\n            ctx.prop = mergeRule({}, [g['*'], ctx.cacheConfig, ctx.prop]);\n        },\n        setOptions(ctx) {\n            if (ctx.prop.optionsTo && ctx.prop.options) {\n                deepSet(ctx.prop, ctx.prop.optionsTo, ctx.prop.options);\n            }\n        },\n        deepSet(ctx) {\n            const deep = ctx.rule.deep;\n            deep && Object.keys(deep).sort((a, b) => a.length < b.length ? -1 : 1).forEach(str => {\n                deepSet(ctx.prop, str, deep[str]);\n            });\n        },\n        setTempProps(vm, ctx) {\n            if (!vm.$props) return;\n\n            const {prop} = ctx;\n            const keys = Object.keys(vm.$props);\n            const inject = this.injectProp(ctx);\n            const injectKeys = Object.keys(inject);\n\n            keys.forEach(key => {\n                if (hasProperty(prop.props, key))\n                    vm.$props[key] = prop.props[key];\n                else if (injectKeys.indexOf(key) > -1) vm.$props[key] = inject[key];\n            });\n\n            const key = (vm.$options.model && vm.$options.model.prop) || 'value';\n            if (keys.indexOf(key) > -1) {\n                vm.$props[key] = prop.value;\n            }\n        },\n        renderTemp(ctx) {\n            if (!Vue.compile) {\n                tip('当前使用的Vue构建版本不支持compile,无法使用template功能');\n                return [];\n            }\n            const rule = ctx.prop;\n            const {id, key} = ctx;\n\n            if (!this.tempList[id]) {\n                if (!ctx.el) {\n                    ctx.el = this.makeVm(rule);\n                    this.vm.$nextTick(() => ctx.parser.mounted(ctx));\n                }\n\n                let vm = ctx.el;\n                if (ctx.input)\n                    vm.$on((vm.$options.model && vm.$options.model.event) || 'input', (value) => {\n                        this.onInput(ctx, value);\n                    });\n\n                this.tempList[id] = {\n                    vm,\n                    template: Vue.compile(rule.template)\n                };\n            }\n\n            const {vm, template} = this.tempList[id];\n\n            this.setTempProps(vm, ctx);\n\n            const vn = template.render.call(vm);\n\n            if (is.Undef(vn.data)) vn.data = {};\n            vn.key = key;\n            vn.data.ref = ctx.ref;\n            vn.data.key = key;\n            return vn;\n        },\n        parseSide(side) {\n            return is.Object(side) ? mergeRule({}, side) : side;\n        },\n        renderSides(vn, ctx, temp) {\n            const prop = ctx[temp ? 'rule' : 'prop'];\n            return [this.renderRule(this.parseSide(prop.prefix)), vn, this.renderRule(this.parseSide(prop.suffix))];\n        },\n        renderSlot(ctx, slot) {\n            return ctx.rule.slot === slot ? this.renderCtx(ctx) : undefined;\n        },\n        renderId(name, type) {\n            const ctxs = this.$handle[type === 'field' ? 'fieldCtx' : 'nameCtx'][name]\n            return ctxs ? ctxs.map(ctx => this.renderCtx(ctx, ctx.parent)) : undefined;\n        },\n        renderCtx(ctx, parent) {\n            if (ctx.type === 'hidden') return;\n            const rule = ctx.rule;\n            const preview = this.options.preview || false;\n            if ((!this.cache[ctx.id]) || this.cache[ctx.id].slot !== rule.slot) {\n                let vn;\n                let cacheFlag = true;\n                const _type = ctx.trueType;\n                const none = !(is.Undef(rule.display) || !!rule.display);\n                if (_type === 'template' && !rule.template) {\n                    vn = this.renderSides(this.renderChildren(ctx), ctx, true);\n                    if (none) {\n                        this.display(vn);\n                    }\n                    vn = this.item(ctx, vn);\n                } else if (_type === 'fcFragment') {\n                    vn = this.renderChildren(ctx);\n                } else {\n                    ctx.initProp();\n                    this.mergeGlobal(ctx);\n                    this.$manager.tidyRule(ctx);\n                    this.deepSet(ctx);\n                    this.setOptions(ctx);\n                    this.ctxProp(ctx);\n                    let prop = ctx.prop;\n                    prop.props.formCreateInject = this.injectProp(ctx);\n\n                    if (prop.hidden) {\n                        this.setCache(ctx, undefined, parent);\n                        return;\n                    }\n\n                    if (_type === 'template' && prop.template) {\n                        vn = this.renderTemp(ctx);\n                        cacheFlag = false;\n                    } else {\n                        let children = [];\n                        if (ctx.parser.renderChildren) {\n                            children = ctx.parser.renderChildren(ctx);\n                        } else if (ctx.parser.loadChildren !== false) {\n                            children = this.renderChildren(ctx);\n                        }\n                        const slot = this.getTypeSlot(ctx.type);\n                        if (slot) {\n                            vn = slot({\n                                rule,\n                                prop,\n                                preview,\n                                children,\n                                api: this.$handle.api,\n                                model: prop.model || {}\n                            });\n                        } else {\n                            vn = preview ? ctx.parser.preview(children, ctx) : ctx.parser.render(children, ctx);\n                        }\n                    }\n                    vn = this.renderSides(vn, ctx);\n                    if ((!(!ctx.input && is.Undef(prop.native))) && prop.native !== true) {\n                        vn = this.$manager.makeWrap(ctx, vn);\n                    }\n                    if (none) {\n                        vn = this.display(vn);\n                    }\n                    vn = this.item(ctx, vn)\n                }\n                if (cacheFlag) {\n                    this.setCache(ctx, vn, parent);\n                }\n                return vn;\n            }\n\n            return this.getCache(ctx);\n        },\n        display(vn) {\n            if (Array.isArray(vn)) {\n                const data = [];\n                vn.forEach(v => {\n                    if (Array.isArray(v)) return this.display(v);\n                    if (this.none(v)) data.push(v);\n                })\n                return data;\n            } else {\n                return this.none(vn);\n            }\n        },\n        none(vn) {\n            if (vn && vn.data) {\n                if (Array.isArray(vn.data.style)) {\n                    vn.data.style.push({display: 'none'});\n                } else {\n                    vn.data.style = [vn.data.style, {display: 'none'}];\n                }\n                return vn;\n            }\n        },\n        item(ctx, vn) {\n            return this.$h('fcFragment', {\n                slot: ctx.rule.slot,\n                key: ctx.key,\n            }, [vn]);\n        },\n        injectProp(ctx) {\n            if (!this.vm.ctxInject[ctx.id]) {\n                $set(this.vm.ctxInject, ctx.id, {\n                    api: this.$handle.api,\n                    form: this.fc.create,\n                    subForm: subForm => {\n                        this.$handle.addSubForm(ctx, subForm);\n                    },\n                    options: [],\n                    children: [],\n                    prop: {},\n                    preview: false,\n                    field: ctx.field,\n                    rule: ctx.rule,\n                });\n            }\n            const inject = this.vm.ctxInject[ctx.id];\n            extend(inject, {\n                preview: this.options.preview || false,\n                options: ctx.prop.options,\n                children: ctx.rule.children,\n                prop: (function () {\n                    const temp = {...ctx.prop};\n                    temp.on = temp.on ? {...temp.on} : {};\n                    delete temp.model;\n                    return temp;\n                }()),\n            });\n            return inject;\n        },\n        ctxProp(ctx, custom) {\n            const {ref, key, rule} = ctx;\n            this.$manager.mergeProp(ctx, custom);\n            ctx.parser.mergeProp(ctx, custom);\n            const props = [\n                {\n                    ref: ref,\n                    key: rule.key || `${key}fc`,\n                    slot: undefined,\n                    on: {\n                        'hook:mounted': () => {\n                            this.onMounted(ctx);\n                        },\n                        'fc.sub-form': (subForm) => {\n                            this.$handle.addSubForm(ctx, subForm);\n                        }\n                    },\n                }\n            ]\n\n            if (!custom && ctx.input) {\n                props.push({\n                    model: {\n                        value: this.$handle.getFormData(ctx),\n                        callback: (value) => {\n                            this.onInput(ctx, value);\n                        },\n                        expression: `formData.${ctx.id}`\n                    },\n                })\n            }\n            mergeProps(props, ctx.prop);\n            return ctx.prop;\n        },\n        onMounted(ctx) {\n            ctx.el = this.vm.$refs[ctx.ref];\n            if (ctx.el) {\n                (ctx.el.$el || ctx.el).__rule__ = ctx.rule;\n            }\n            ctx.parser.mounted(ctx);\n            this.$handle.effect(ctx, 'mounted');\n        },\n        onInput(ctx, value) {\n            this.$handle.onInput(ctx, value);\n        },\n        renderChildren(ctx) {\n            const {children} = ctx.rule, orgChildren = this.orgChildren[ctx.id];\n\n            const isRm = child => {\n                return !is.String(child) && child.__fc__ && !this.$handle.ctxs[child.__fc__.id];\n            }\n\n            if (!is.trueArray(children) && orgChildren) {\n                this.$handle.deferSyncValue(() => {\n                    orgChildren.forEach(child => {\n                        if (!child) return;\n                        if (isRm(child)) {\n                            this.$handle.rmCtx(child.__fc__);\n                        }\n                    });\n                });\n                this.orgChildren[ctx.id] = [];\n                return [];\n            }\n\n            orgChildren && this.$handle.deferSyncValue(() => {\n                orgChildren.forEach(child => {\n                    if (!child) return;\n                    if (children.indexOf(child) === -1 && isRm(child)) {\n                        this.$handle.rmCtx(child.__fc__);\n                    }\n                });\n            });\n\n            return children.map(child => {\n                if (!child) return;\n                if (is.String(child)) return child;\n                if (child.__fc__) {\n                    return this.renderCtx(child.__fc__, ctx);\n                }\n                if (child.type) {\n                    this.vm.$nextTick(() => {\n                        this.$handle.loadChildren(children, ctx);\n                        this.$handle.refresh();\n                    });\n                }\n            });\n\n        },\n        defaultRender(ctx, children) {\n            const prop = ctx.prop;\n            if (this.vNode[ctx.type])\n                return this.vNode[ctx.type](prop, children);\n            if (this.vNode[ctx.originType])\n                return this.vNode[ctx.originType](prop, children);\n            return this.vNode.make(lower(ctx.originType), prop, children);\n        },\n        renderRule(rule, children, origin) {\n            if (!rule) return undefined;\n            if (is.String(rule)) return rule;\n\n            let type;\n            if (origin) {\n                type = rule.type;\n            } else {\n                type = rule.is;\n                if (rule.type) {\n                    type = toCase(rule.type);\n                    const alias = this.vNode.aliasMap[type];\n                    if (alias) type = toCase(alias);\n                }\n            }\n\n            if (!type) return undefined;\n            let data = [[children]];\n            if (is.trueArray(rule.children)) {\n                data.push(rule.children.map(v => this.renderRule(v)));\n            }\n            return this.$h(type, {...rule}, data);\n        }\n    })\n}\n","import useCache from './cache';\nimport useRender from './render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\n\nexport default function Render(handle) {\n    extend(this, {\n        $handle: handle,\n        fc: handle.fc,\n        vm: handle.vm,\n        $manager: handle.$manager,\n        vNode: new handle.fc.CreateNode(handle.vm),\n    });\n\n    funcProxy(this, {\n        options() {\n            return handle.options;\n        },\n        sort() {\n            return handle.sort;\n        }\n    })\n\n    this.initCache();\n    this.initRender();\n}\n\nuseCache(Render);\nuseRender(Render)\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport toLine from '@form-create/utils/lib/toline';\nimport {parseFn} from '../frame/util';\n\n\nexport default function useInject(Handler) {\n    extend(Handler.prototype, {\n        parseInjectEvent(rule, on) {\n            const inject = rule.inject || this.options.injectEvent;\n            return this.parseEventLst(rule, on, inject);\n        },\n        parseEventLst(rule, data, inject, deep) {\n            Object.keys(data).forEach(k => {\n                const fn = this.parseEvent(rule, data[k], inject, deep);\n                if (fn) {\n                    data[k] = fn;\n                }\n            });\n            return data;\n        },\n        parseEvent(rule, fn, inject, deep) {\n            if (is.Function(fn) && ((inject !== false && !is.Undef(inject)) || fn.__inject)) {\n                return this.inject(rule, fn, inject)\n            } else if (!deep && Array.isArray(fn) && fn[0] && (is.String(fn[0]) || is.Function(fn[0]))) {\n                return this.parseEventLst(rule, fn, inject, true);\n            } else if (is.String(fn)) {\n                const val = parseFn(fn);\n                if (val && fn !== val) {\n                    return val.__inject ? this.parseEvent(rule, val, inject, true) : val;\n                }\n            }\n        },\n        parseEmit(ctx, on) {\n            let event = {}, rule = ctx.rule, {emitPrefix, field, name, inject} = rule;\n            let emit = rule[on ? 'emit' : 'nativeEmit'] || [];\n            if (is.trueArray(emit)) {\n                let emitKey = emitPrefix || field || name;\n                if (emitKey) {\n                    if (!on) emitKey = `native-${emitKey}`;\n                    emit.forEach(eventName => {\n                        if (!eventName) return;\n                        let eventInject;\n                        if (is.Object(eventName)) {\n                            eventInject = eventName.inject;\n                            eventName = eventName.name;\n                        }\n                        const fieldKey = toLine(`${emitKey}-${eventName}`);\n                        const fn = (...arg) => {\n                            this.vm.$emit(fieldKey, ...arg);\n                            this.vm.$emit('emit-event', fieldKey, ...arg);\n                        };\n                        fn.__emit = true;\n\n                        if (!eventInject && inject === false) {\n                            event[eventName] = fn;\n                        } else {\n                            let _inject = eventInject || inject || this.options.injectEvent;\n                            event[eventName] = is.Undef(_inject) ? fn : this.inject(rule, fn, _inject);\n                        }\n                    });\n                }\n\n            }\n            ctx.computed[on ? 'on' : 'nativeOn'] = event;\n            return event;\n        },\n        getInjectData(self, inject) {\n            const {option, rule} = this.vm.$options.propsData;\n            return {\n                api: this.api,\n                $f: this.api,\n                rule,\n                self: self.__origin__,\n                option,\n                inject\n            };\n        },\n        inject(self, _fn, inject) {\n            if (_fn.__origin) {\n                if (this.watching && !this.loading)\n                    return _fn;\n                _fn = _fn.__origin;\n            }\n\n            const h = this;\n\n            const fn = function (...args) {\n                const data = h.getInjectData(self, inject);\n                data.args = [...args];\n                args.unshift(data);\n                return _fn.apply(this, args);\n            };\n            fn.__origin = _fn;\n            fn.__json = _fn.__json;\n            return fn;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\n\nconst EVENT = ['hook:updated', 'hook:mounted'];\n\nexport default function usePage(Handler) {\n    extend(Handler.prototype, {\n        usePage() {\n            const page = this.options.page;\n            if (!page) return;\n            let first = 25;\n            let limit = getLimit(this.rules);\n            if (is.Object(page)) {\n                if (page.first) first = parseInt(page.first, 10) || first;\n                if (page.limit) limit = parseInt(page.limit, 10) || limit;\n            }\n            extend(this, {\n                first,\n                limit,\n                pageEnd: this.rules.length <= first,\n            })\n\n            this.bus.$on('page-end', () => this.vm.$emit('page-end', this.api));\n            this.pageLoad();\n        },\n        pageLoad() {\n            const pageFn = () => {\n                if (this.pageEnd) {\n                    this.vm.$off(EVENT, pageFn);\n                    this.bus.$emit('page-end');\n                } else {\n                    this.first += this.limit;\n                    this.pageEnd = this.rules.length <= this.first;\n                    this.loadRule();\n                    this.refresh();\n                }\n            }\n            this.vm.$on(EVENT, pageFn);\n        },\n    })\n}\n\n\nfunction getLimit(rules) {\n    return rules.length < 31 ? 31 : Math.ceil(rules.length / 3);\n}\n","import extend from '@form-create/utils/lib/extend';\n\n\nexport default function useRender(Handler) {\n    extend(Handler.prototype, {\n        clearNextTick() {\n            this.nextTick && clearTimeout(this.nextTick);\n            this.nextTick = null;\n        },\n        bindNextTick(fn) {\n            this.clearNextTick();\n            this.nextTick = setTimeout(() => {\n                fn()\n                this.nextTick = null;\n            }, 10);\n        },\n        render() {\n            // console.warn('%c render', 'color:green');\n            ++this.loadedId;\n\n            if (this.vm.unique > 0)\n                return this.$render.render();\n            else {\n                this.vm.unique = 1;\n                return [];\n            }\n        },\n    });\n}\n","import unique from '@form-create/utils/lib/unique';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {enumerable} from '../frame/util';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nfunction bind(ctx) {\n    Object.defineProperties(ctx.origin, {\n        __fc__: enumerable(ctx, true)\n    });\n}\n\nexport default function RuleContext(handle, rule) {\n    const id = unique();\n\n    extend(this, {\n        id,\n        ref: id,\n        wrapRef: id + 'fi',\n        rule,\n        origin: rule.__origin__ || rule,\n        name: rule.name,\n\n        watch: [],\n        linkOn: [],\n        root: [],\n        ctrlRule: [],\n        parent: null,\n        cacheConfig: null,\n        prop: {...rule},\n        computed: {},\n        payload: {},\n        input: !!rule.field,\n        el: undefined,\n        defaultValue: rule.field ? deepCopy(rule.value) : undefined,\n        field: rule.field || undefined,\n    })\n\n    this.updateType();\n    this.updateKey();\n    bind(this);\n    this.update(handle, true);\n}\n\nextend(RuleContext.prototype, {\n    effectData(name) {\n        if (!this.payload[name]) {\n            this.payload[name] = {};\n        }\n        return this.payload[name];\n    },\n    clearEffectData(name) {\n        delete this.payload[name]\n    },\n    updateKey(flag) {\n        this.key = unique();\n        flag && this.parent && this.parent.updateKey(flag);\n    },\n    updateType() {\n        this.originType = this.rule.type;\n        this.type = toCase(this.rule.type);\n    },\n    setParser(parser) {\n        this.parser = parser;\n        parser.init(this);\n    },\n    initProp() {\n        const rule = {...this.rule};\n        delete rule.children;\n        this.prop = mergeProps([rule, ...Object.keys(this.payload).map(k => this.payload[k]), this.computed]);\n    },\n    check(handle) {\n        return this.vm === handle.vm\n    },\n    unwatch() {\n        this.watch.forEach(un => un());\n        this.watch = [];\n    },\n    unlink() {\n        this.linkOn.forEach(un => un());\n        this.linkOn = [];\n    },\n    link() {\n        this.unlink();\n        this.$handle.appendLink(this);\n    },\n    watchTo() {\n        this.$handle.watchCtx(this);\n    },\n    delete() {\n        const undef = void 0;\n        this.unwatch();\n        this.unlink();\n        this.rmCtrl();\n        extend(this, {\n            deleted: true,\n            prop: {...this.rule},\n            computed: {},\n            el: undef,\n            $handle: undef,\n            $render: undef,\n            $api: undef,\n            vm: undef,\n            vNode: undef,\n            parent: null,\n            cacheConfig: null,\n        })\n    },\n    rmCtrl() {\n        this.ctrlRule.forEach(ctrl => ctrl.__fc__ && ctrl.__fc__.rm());\n        this.ctrlRule = [];\n    },\n    rm() {\n        const _rm = () => {\n            let index = this.root.indexOf(this.origin);\n            if (index > -1) {\n                this.root.splice(index, 1);\n                this.$handle && this.$handle.refresh();\n            }\n        }\n        if (this.deleted) {\n            _rm();\n            return;\n        }\n        this.$handle.noWatch(() => {\n            this.$handle.deferSyncValue(() => {\n                this.rmCtrl();\n                _rm();\n                this.$handle.rmCtx(this);\n                extend(this, {\n                    root: []\n                });\n            }, this.input);\n        });\n    },\n    update(handle, init) {\n        extend(this, {\n            deleted: false,\n            $handle: handle,\n            $render: handle.$render,\n            $api: handle.api,\n            vm: handle.vm,\n            trueType: handle.getType(this.originType),\n            vNode: handle.$render.vNode,\n            updated: false,\n        });\n        !init && this.unwatch();\n        this.watchTo();\n        this.link();\n    }\n})\n","import extend from '@form-create/utils/lib/extend';\nimport {byCtx, copyRule, enumerable, getRule, invoke, parseFn} from '../frame/util';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {err} from '@form-create/utils/lib/console';\nimport {baseRule} from '../factory/creator';\nimport RuleContext from '../factory/context';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\n\nexport default function useLoader(Handler) {\n    extend(Handler.prototype, {\n        nextRefresh(fn) {\n            const id = this.loadedId;\n            this.vm.$nextTick(() => {\n                id === this.loadedId && (fn ? fn() : this.refresh());\n            });\n        },\n        parseRule(_rule) {\n            const rule = getRule(_rule);\n\n            Object.defineProperties(rule, {\n                __origin__: enumerable(_rule, true)\n            });\n\n            fullRule(rule);\n            this.appendValue(rule);\n\n            rule.options = Array.isArray(rule.options) ? rule.options : [];\n\n            [rule, rule['prefix'], rule['suffix']].forEach(item => {\n                if (!item) {\n                    return;\n                }\n                this.loadFn(item, rule);\n            });\n            this.loadCtrl(rule);\n            if (rule.update) {\n                rule.update = parseFn(rule.update);\n            }\n            return rule;\n        },\n        loadFn(item, rule) {\n            ['on', 'props', 'nativeOn', 'deep'].forEach(k => {\n                item[k] && this.parseInjectEvent(rule, item[k]);\n            });\n        },\n        loadCtrl(rule) {\n            rule.control && rule.control.forEach(ctrl => {\n                if (ctrl.handle) {\n                    ctrl.handle = parseFn(ctrl.handle)\n                }\n            })\n        },\n        syncProp(ctx) {\n            const rule = ctx.rule;\n            is.trueArray(rule.sync) && mergeProps([{\n                on: rule.sync.reduce((pre, prop) => {\n                    pre[`update:${prop}`] = (val) => {\n                        rule.props[prop] = val;\n                        this.vm.$emit('sync', prop, val, rule, this.fapi);\n                    }\n                    return pre\n                }, {})\n            }], ctx.computed)\n        },\n        loadRule() {\n            // console.warn('%c load', 'color:blue');\n            this.cycleLoad = false;\n            this.loading = true;\n            if (this.pageEnd) {\n                this.bus.$emit('load-start');\n            }\n            this.deferSyncValue(() => {\n                this._loadRule(this.rules);\n                this.loading = false;\n                if (this.cycleLoad && this.pageEnd) {\n                    return this.loadRule();\n                }\n                if (this.pageEnd) {\n                    this.bus.$emit('load-end');\n                }\n                this.vm._renderRule();\n                this.$render.initOrgChildren();\n                this.syncForm();\n            });\n        },\n        loadChildren(children, parent) {\n            this.cycleLoad = false;\n            this.loading = true;\n            this.bus.$emit('load-start');\n            this._loadRule(children, parent);\n            this.loading = false;\n            if (this.cycleLoad) {\n                return this.loadRule();\n            } else {\n                this.bus.$emit('load-end');\n                this.syncForm();\n            }\n            this.$render.clearCache(parent);\n        },\n        _loadRule(rules, parent) {\n\n            const preIndex = (i) => {\n                let pre = rules[i - 1];\n                if (!pre || !pre.__fc__) {\n                    return i > 0 ? preIndex(i - 1) : -1;\n                }\n                let index = this.sort.indexOf(pre.__fc__.id);\n                return index > -1 ? index : preIndex(i - 1);\n            }\n\n            const loadChildren = (children, parent) => {\n                if (is.trueArray(children)) {\n                    this._loadRule(children, parent);\n                }\n            };\n\n            rules.map((_rule, index) => {\n                if (parent && (is.String(_rule) || is.Undef(_rule))) return;\n                if (!this.pageEnd && !parent && index >= this.first) return;\n\n                if (!is.Object(_rule) || !getRule(_rule).type)\n                    return err('未定义生成规则的 type 字段', _rule);\n\n                if (_rule.__fc__ && _rule.__fc__.root === rules && this.ctxs[_rule.__fc__.id]) {\n                    loadChildren(_rule.__fc__.rule.children, _rule.__fc__);\n                    return _rule.__fc__;\n                }\n\n                let rule = getRule(_rule);\n\n                const isRepeat = () => {\n                    return !!(rule.field && this.fieldCtx[rule.field] && this.fieldCtx[rule.field][0] !== _rule.__fc__)\n                }\n\n                this.ruleEffect(rule, 'init', {repeat: isRepeat()});\n\n                if (isRepeat()) {\n                    this.vm.$emit('repeat-field', _rule, this.api);\n                }\n\n                let ctx;\n                let isCopy = false;\n                let isInit = !!_rule.__fc__;\n                if (isInit) {\n                    ctx = _rule.__fc__;\n                    const check = !ctx.check(this);\n                    if (ctx.deleted) {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            ctx.update(this);\n                        }\n                    } else {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            rules[index] = _rule = _rule._clone ? _rule._clone() : copyRule(_rule);\n                            ctx = null;\n                            isCopy = true;\n                        }\n                    }\n                }\n                if (!ctx) {\n                    ctx = new RuleContext(this, this.parseRule(_rule));\n                    this.bindParser(ctx);\n                } else {\n                    if (ctx.originType !== ctx.rule.type) {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    }\n                    this.appendValue(ctx.rule);\n                }\n                [false, true].forEach(b => this.parseEmit(ctx, b));\n                this.syncProp(ctx);\n                ctx.parent = parent || null;\n                ctx.root = rules;\n                this.setCtx(ctx);\n\n                !isCopy && !isInit && this.effect(ctx, 'load');\n\n                ctx.parser.loadChildren === false || loadChildren(ctx.rule.children, ctx);\n\n                if (!parent) {\n                    const _preIndex = preIndex(index);\n                    if (_preIndex > -1 || !index) {\n                        this.sort.splice(_preIndex + 1, 0, ctx.id);\n                    } else {\n                        this.sort.push(ctx.id);\n                    }\n                }\n\n                const r = ctx.rule;\n                if (!ctx.updated) {\n                    ctx.updated = true;\n                    if (is.Function(r.update)) {\n                        this.bus.$once('load-end', () => {\n                            this.refreshUpdate(ctx, r.value);\n                        });\n                    }\n                    this.effect(ctx, 'loaded');\n                }\n\n                if (ctx.input)\n                    Object.defineProperty(r, 'value', this.valueHandle(ctx));\n                if (this.refreshControl(ctx)) this.cycleLoad = true;\n                return ctx;\n            });\n        },\n        refreshControl(ctx) {\n            return ctx.input && ctx.rule.control && this.useCtrl(ctx);\n        },\n        useCtrl(ctx) {\n            const controls = getCtrl(ctx), validate = [], api = this.api;\n            if (!controls.length) return false;\n\n            for (let i = 0; i < controls.length; i++) {\n                const control = controls[i], handleFn = control.handle || (val => val === control.value);\n                if (!is.trueArray(control.rule)) continue;\n                const data = {\n                    ...control,\n                    valid: invoke(() => handleFn(ctx.rule.value, api)),\n                    ctrl: findCtrl(ctx, control.rule),\n                    isHidden: is.String(control.rule[0]),\n                };\n                if ((data.valid && data.ctrl) || (!data.valid && !data.ctrl && !data.isHidden)) continue;\n                validate.push(data);\n            }\n            if (!validate.length) return false;\n\n            let flag = false;\n            this.deferSyncValue(() => {\n                validate.reverse().forEach(({isHidden, valid, rule, prepend, append, child, ctrl}) => {\n                    if (isHidden) {\n                        valid ? ctx.ctrlRule.push({\n                            __ctrl: true,\n                            children: rule,\n                            valid\n                        })\n                            : ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        this.vm.$nextTick(() => {\n                            this.api.hidden(!valid, rule);\n                        });\n                        return;\n                    }\n                    if (valid) {\n                        flag = true;\n                        const ruleCon = {\n                            type: 'fcFragment',\n                            native: true,\n                            __ctrl: true,\n                            children: rule,\n                        }\n                        ctx.ctrlRule.push(ruleCon);\n                        this.bus.$once('load-start', () => {\n                            // this.cycleLoad = true;\n                            if (prepend) {\n                                api.prepend(ruleCon, prepend, child)\n                            } else if (append || child) {\n                                api.append(ruleCon, append || ctx.id, child)\n                            } else {\n                                ctx.root.splice(ctx.root.indexOf(ctx.origin) + 1, 0, ruleCon);\n                            }\n                        });\n                    } else {\n                        ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        const ctrlCtx = byCtx(ctrl);\n                        ctrlCtx && ctrlCtx.rm();\n                    }\n                });\n            });\n            this.vm.$emit('control', ctx.origin, this.api);\n            this.effect(ctx, 'control');\n            return flag;\n        },\n        reloadRule(rules) {\n            return this._reloadRule(rules);\n        },\n        _reloadRule(rules) {\n            // console.warn('%c reload', 'color:red');\n            if (!rules) rules = this.rules;\n\n            const ctxs = {...this.ctxs};\n\n            this.clearNextTick();\n            this.$render.clearOrgChildren();\n            this.initData(rules);\n            this.fc.rules = rules;\n\n            this.bus.$once('load-end', () => {\n                Object.keys(ctxs).filter(id => this.ctxs[id] === undefined)\n                    .forEach(id => this.rmCtx(ctxs[id]));\n                this.$render.clearCacheAll();\n            });\n            this.reloading = true;\n            this.loadRule();\n            this.reloading = false;\n            this.refresh();\n\n            this.bus.$off('next-tick', this.nextReload);\n            this.bus.$once('next-tick', this.nextReload);\n            this.vm.$emit('update', this.api);\n        },\n        //todo 组件生成全部通过 alias\n        refresh() {\n            this.vm._refresh();\n        },\n    });\n}\n\nfunction fullRule(rule) {\n    const def = baseRule();\n\n    Object.keys(def).forEach(k => {\n        if (!hasProperty(rule, k)) rule[k] = def[k];\n    });\n    return rule;\n}\n\nfunction getCtrl(ctx) {\n    const control = ctx.rule.control || [];\n    if (is.Object(control)) return [control];\n    else return control;\n}\n\nfunction findCtrl(ctx, rule) {\n    for (let i = 0; i < ctx.ctrlRule.length; i++) {\n        const ctrl = ctx.ctrlRule[i];\n        if (ctrl.children === rule)\n            return ctrl;\n    }\n}\n\nfunction isCtrl(ctx) {\n    return !!ctx.rule.__ctrl;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport {$set} from '@form-create/utils/lib/modify';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\nimport toArray from '@form-create/utils/lib/toarray';\n\nexport default function useInput(Handler) {\n    extend(Handler.prototype, {\n        getValue(ctx) {\n            if (is.Undef(ctx.cacheValue)) {\n                ctx.cacheValue = ctx.parser.toValue(this.getFormData(ctx), ctx);\n            }\n            return ctx.cacheValue;\n        },\n        setValue(ctx, value, formValue, setFlag) {\n            if (ctx.deleted) return;\n            ctx.cacheValue = value;\n            this.changeStatus = true;\n            this.nextRefresh();\n            this.$render.clearCache(ctx);\n            this.setFormData(ctx, formValue);\n            this.syncValue();\n            this.valueChange(ctx, value);\n            this.vm.$emit('change', ctx.field, value, ctx.origin, this.api, setFlag);\n            this.effect(ctx, 'value');\n        },\n        onInput(ctx, value) {\n            let val;\n            if (ctx.input && (this.isQuote(ctx, val = ctx.parser.toValue(value, ctx)) || this.isChange(ctx, val))) {\n                this.setValue(ctx, val, value);\n            }\n        },\n        setFormData(ctx, value) {\n            $set(this.formData, ctx.id, value);\n        },\n        getFormData(ctx) {\n            return this.formData[ctx.id];\n        },\n        validate() {\n            toEmpty(this.vm.validate);\n            this.fields().forEach(id => {\n                this.fieldCtx[id].forEach(ctx => {\n                    this.vm.validate[ctx.id] = toArray(ctx.rule.validate);\n                });\n            });\n            return this.vm.validate;\n        },\n        syncForm() {\n            toEmpty(this.form);\n            Object.defineProperties(this.form, this.fields().reduce((initial, field) => {\n                const ctx = this.getFieldCtx(field);\n                const handle = this.valueHandle(ctx);\n                handle.configurable = true;\n                initial[field] = handle;\n                return initial;\n            }, Object.keys(this.appendData).reduce((initial, field) => {\n                initial[field] = {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => {\n                        return this.appendData[field];\n                    },\n                    set: (val) => {\n                        this.appendData[field] = val;\n                    }\n                }\n                return initial;\n            }, {})));\n            this.syncValue();\n        },\n        valueHandle(ctx) {\n            return {\n                enumerable: true,\n                get: () => {\n                    return this.getValue(ctx);\n                },\n                set: (value) => {\n                    if (this.isChange(ctx, value)) {\n                        this.setValue(ctx, value, ctx.parser.toFormValue(value, ctx), true);\n                    }\n                }\n            };\n        },\n        appendValue(rule) {\n            if (!rule.field || !hasProperty(this.appendData, rule.field)) return;\n            rule.value = this.appendData[rule.field];\n            delete this.appendData[rule.field];\n        },\n        addSubForm(ctx, subForm) {\n            if (ctx.input) {\n                this.subForm[ctx.id] = subForm;\n            }\n        },\n        deferSyncValue(fn, sync) {\n            if (!this.deferSyncFn) {\n                this.deferSyncFn = fn;\n            }\n            if (!this.deferSyncFn.sync) {\n                this.deferSyncFn.sync = sync;\n            }\n            invoke(fn);\n            if (this.deferSyncFn === fn) {\n                this.deferSyncFn = null;\n                if (fn.sync) {\n                    this.syncValue();\n                }\n            }\n        },\n        syncValue() {\n            if (this.deferSyncFn) {\n                return this.deferSyncFn.sync = true;\n            }\n            this.vm._updateValue({...this.form});\n        },\n        isChange(ctx, value) {\n            return JSON.stringify(ctx.rule.value, strFn) !== JSON.stringify(value, strFn);\n        },\n        isQuote(ctx, value) {\n            return (is.Object(value) || Array.isArray(value)) && value === ctx.rule.value;\n        },\n        refreshUpdate(ctx, val) {\n            if (is.Function(ctx.rule.update)) {\n                const state = invoke(() => ctx.rule.update(val, ctx.origin, this.api));\n                if (state === undefined) return;\n                ctx.rule.hidden = state === true;\n            }\n        },\n        valueChange(ctx, val) {\n            this.refreshRule(ctx, val);\n            this.bus.$emit('change-' + ctx.field, val);\n        },\n        refreshRule(ctx, val) {\n            if (this.refreshControl(ctx)) {\n                this.$render.clearCacheAll();\n                this.loadRule();\n                this.vm.$emit('update', this.api);\n                this.refresh();\n            }\n            this.refreshUpdate(ctx, val);\n        },\n        appendLink(ctx) {\n            const link = ctx.rule.link;\n            is.trueArray(link) && link.forEach(field => {\n                const fn = () => this.refreshRule(ctx, ctx.rule.value);\n\n                this.bus.$on('change-' + field, fn);\n                ctx.linkOn.push(() => this.bus.$off('change-' + field, fn));\n            });\n        },\n        fields() {\n            return Object.keys(this.fieldCtx);\n        },\n    });\n}\n\n\nfunction strFn(key, val) {\n    return typeof val === 'function' ? '' + val : val;\n}\n\nfunction toEmpty(obj) {\n    Object.keys(obj).forEach(k => delete obj[k]);\n}\n","const BaseParser = {\n    init(ctx) {\n    },\n    toFormValue(value, ctx) {\n        return value\n    },\n    toValue(formValue, ctx) {\n        return formValue;\n    },\n    mounted(ctx) {\n    },\n    render(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    preview(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    mergeProp(ctx) {\n    }\n}\n\nexport default BaseParser;\n","import extend from '@form-create/utils/lib/extend';\nimport toCase from '@form-create/utils/lib/tocase';\nimport BaseParser from '../factory/parser';\nimport {$del} from '@form-create/utils/lib/modify';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useContext(Handler) {\n    extend(Handler.prototype, {\n        getCtx(id) {\n            return this.getFieldCtx(id) || this.getNameCtx(id)[0] || this.ctxs[id];\n        },\n        getCtxs(id) {\n            return this.fieldCtx[id] || this.nameCtx[id] || (this.ctxs[id] ? [this.ctxs[id]] : []);\n        },\n        setIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            if (!this[field][key]) {\n                this[field][key] = [ctx];\n            } else {\n                this[field][key].push(ctx);\n            }\n        },\n        rmIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            const lst = this[field][key];\n            if (!lst) return false;\n            const flag = lst.splice(lst.indexOf(ctx) >>> 0, 1).length > 0;\n            if (!lst.length) {\n                delete this[field][key];\n            }\n            return flag;\n        },\n        getFieldCtx(field) {\n            return (this.fieldCtx[field] || [])[0];\n        },\n        getNameCtx(name) {\n            return this.nameCtx[name] || [];\n        },\n        setCtx(ctx) {\n            let {id, field, name, rule} = ctx;\n            this.ctxs[id] = ctx;\n            name && this.setIdCtx(ctx, name, 'name');\n            if (!ctx.input) return;\n            this.setIdCtx(ctx, field, 'field');\n            this.setFormData(ctx, ctx.parser.toFormValue(rule.value, ctx));\n            if (this.isMounted && !this.reloading) {\n                this.vm.$emit('change', ctx.field, rule.value, ctx.origin, this.api);\n            }\n        },\n        getParser(ctx) {\n            const list = this.fc.parsers;\n            return list[ctx.originType] || list[toCase(ctx.type)] || list[ctx.trueType] || BaseParser;\n        },\n        bindParser(ctx) {\n            ctx.setParser(this.getParser(ctx));\n        },\n        getType(alias) {\n            const map = this.fc.CreateNode.aliasMap;\n            const type = map[alias] || map[toCase(alias)] || alias;\n            return toCase(type);\n        },\n        noWatch(fn) {\n            if (!this.noWatchFn) {\n                this.noWatchFn = fn;\n            }\n            invoke(fn);\n            if (this.noWatchFn === fn) {\n                this.noWatchFn = null;\n            }\n        },\n        watchCtx(ctx) {\n            const vm = this.vm;\n            const none = ['field', 'value', 'vm', 'template', 'name', 'config', 'control', 'inject', 'sync', 'payload', 'optionsTo', 'update'];\n            Object.keys(ctx.rule).filter(k => k[0] !== '_' && none.indexOf(k) === -1).forEach((key) => {\n                const flag = key === 'children';\n                ctx.watch.push(vm.$watch(() => ctx.rule[key], (n, o) => {\n                    if (this.loading || this.noWatchFn || this.reloading) return;\n                    if (flag && ctx.parser.loadChildren === false) {\n                        this.$render.clearCache(ctx);\n                        this.nextRefresh();\n                        return;\n                    }\n                    this.watching = true;\n                    // if (key === 'hidden')\n                    //     ctx.updateKey(true);\n                    // else\n                    if (key === 'link') {\n                        ctx.link();\n                        return;\n                    } else if (['props', 'on', 'nativeOn', 'deep'].indexOf(key) > -1) {\n                        this.parseInjectEvent(ctx.rule, n || {});\n                        if (key === 'props' && ctx.input) {\n                            this.setFormData(ctx, ctx.parser.toFormValue(ctx.rule.value, ctx));\n                        }\n                    } else if (['emit', 'nativeEmit'].indexOf(key) > -1)\n                        this.parseEmit(ctx, key === 'emit');\n                    else if (['prefix', 'suffix'].indexOf(key) > -1)\n                        n && this.loadFn(n, ctx.rule);\n                    else if (key === 'type') {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    } else if (key === 'children') {\n                        const flag = is.trueArray(n);\n                        this.deferSyncValue(() => {\n                            if (n !== o) {\n                                this.rmSub(o);\n                                this.$render.initOrgChildren();\n                            }\n                            flag && this.loadChildren(n, ctx);\n                            this.vm.$emit('update', this.api);\n                        });\n                    }\n                    this.$render.clearCache(ctx);\n                    this.watching = false;\n                }, {deep: !flag, sync: flag}));\n            });\n            this.watchEffect(ctx);\n        },\n        rmSub(sub) {\n            is.trueArray(sub) && sub.forEach(r => {\n                r && r.__fc__ && this.rmCtx(r.__fc__);\n            })\n        },\n        rmCtx(ctx) {\n            if (ctx.deleted) return;\n            const {id, field, input, name} = ctx;\n            if (ctx.input) {\n                Object.defineProperty(ctx.rule, 'value', {\n                    value: ctx.rule.value,\n                    writable: true\n                });\n            }\n\n            $del(this.ctxs, id);\n            $del(this.$render.tempList, id);\n            $del(this.$render.orgChildren, id);\n            $del(this.vm.ctxInject, id);\n            $del(this.formData, id);\n            $del(this.subForm, id);\n            $del(ctx, 'cacheValue');\n\n            input && this.rmIdCtx(ctx, field, 'field');\n            name && this.rmIdCtx(ctx, name, 'name');\n\n            this.deferSyncValue(() => {\n                if (!this.reloading) {\n                    if (ctx.parser.loadChildren !== false) {\n                        if (is.trueArray(ctx.rule.children)) {\n                            ctx.rule.children.forEach(h => h.__fc__ && this.rmCtx(h.__fc__));\n                        }\n                    }\n                    if (ctx.root === this.rules) {\n                        this.vm._renderRule();\n                    }\n                }\n            }, input);\n\n            const index = this.sort.indexOf(id);\n            if (index > -1) {\n                this.sort.splice(index, 1);\n            }\n\n            this.$render.clearCache(ctx);\n            ctx.delete();\n            this.effect(ctx, 'deleted');\n            input && !this.fieldCtx[field] && this.vm.$emit('removeField', field, ctx.rule, this.api);\n            ctx.rule.__ctrl || this.vm.$emit('removeRule', ctx.rule, this.api);\n            return ctx;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useLifecycle(Handler) {\n    extend(Handler.prototype, {\n        mounted() {\n            const _mounted = () => {\n                this.isMounted = true;\n                this.lifecycle('mounted');\n            }\n            if (this.pageEnd) {\n                _mounted();\n            } else {\n                this.bus.$once('page-end', _mounted);\n            }\n        },\n        lifecycle(name) {\n            const fn = this.options[name];\n            is.Function(fn) && invoke(() => fn(this.api));\n            this.vm.$emit(name, this.api);\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\n\n\nexport default function useEffect(Handler) {\n    extend(Handler.prototype, {\n        useProvider() {\n            const ps = this.fc.providers;\n            Object.keys(ps).forEach(k => {\n                const prop = ps[k];\n                prop._c = getComponent(prop);\n                this.onEffect(prop);\n                this.providers[k] = prop;\n            });\n        },\n        onEffect(provider) {\n            const used = [];\n            (provider._c || ['*']).forEach(name => {\n                const type = name === '*' ? '*' : this.getType(name);\n                if (used.indexOf(type) > -1) return;\n                used.push(type);\n                this.bus.$on(`p:${provider.name}:${type}:${provider.input ? 1 : 0}`, (event, args) => {\n                    provider[event] && provider[event](...args);\n                });\n            });\n            provider._used = used;\n        },\n        watchEffect(ctx) {\n            const vm = this.vm;\n            Object.keys(ctx.rule.effect || {}).forEach(k => {\n                ctx.watch.push(vm.$watch(() => ctx.rule.effect[k], (n) => {\n                    this.effect(ctx, 'watch', {[k]: n});\n                }, {deep: true}));\n            });\n        },\n        ruleEffect(rule, event, append) {\n            this.emitEffect({\n                rule,\n                input: !!rule.field,\n                type: this.getType(rule.type)\n            }, event, append);\n        },\n        effect(ctx, event, custom) {\n            this.emitEffect({\n                rule: ctx.rule,\n                input: ctx.input,\n                type: ctx.trueType,\n                ctx,\n                custom\n            }, event);\n        },\n        getEffect(rule, name) {\n            if (hasProperty(rule, 'effect') && hasProperty(rule.effect, name))\n                return rule.effect[name];\n            else\n                return undefined;\n        },\n        emitEffect({ctx, rule, input, type, custom}, event, append) {\n            if (!type || type === 'fcFragment') return;\n            const effect = custom ? custom : (rule.effect || {});\n            Object.keys(effect).forEach(attr => {\n                const p = this.providers[attr];\n                if (!p || (p.input && !input)) return;\n                let _type;\n                if (!p._c) {\n                    _type = '*';\n                } else if (p._used.indexOf(type) > -1) {\n                    _type = type;\n                } else {\n                    return;\n                }\n                const data = {value: effect[attr], getValue: () => this.getEffect(rule, attr), ...(append || {})};\n                if (ctx) {\n                    data.getProp = () => ctx.effectData(attr);\n                    data.clearProp = () => ctx.clearEffectData(attr);\n                    data.mergeProp = (prop) => mergeProps([prop], data.getProp());\n                }\n                this.bus.$emit(`p:${attr}:${_type}:${p.input ? 1 : 0}`, event, [data, rule, this.api]);\n            });\n        }\n    });\n}\n\nfunction unique(arr) {\n    return arr.filter(function (item, index, arr) {\n        return arr.indexOf(item, 0) === index;\n    });\n}\n\nfunction getComponent(p) {\n    const c = p.components;\n    if (Array.isArray(c)) return unique(c.filter(v => v !== '*'));\n    else if (is.String(c)) return [c];\n    else return false;\n}\n","import Api from '../frame/api';\nimport Render from '../render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\nimport useInject from './inject';\nimport usePage from './page';\nimport useRender from './render';\nimport useLoader from './loader';\nimport useInput from './input';\nimport useContext from './context';\nimport useLifecycle from './lifecycle';\nimport useEffect from './effect';\n\n\nexport default function Handler(fc) {\n    extend(this, {\n        fc,\n        vm: fc.vm,\n        watching: false,\n        loading: false,\n        reloading: false,\n        noWatchFn: null,\n        deferSyncFn: null,\n        isMounted: false,\n        formData: {},\n        subForm: {},\n        form: {},\n        appendData: {},\n        providers: {},\n        cycleLoad: null,\n        loadedId: 1,\n        nextTick: null,\n        changeStatus: false,\n        pageEnd: true,\n        nextReload: () => {\n            this.lifecycle('reload');\n        }\n    });\n\n    funcProxy(this, {\n        options() {\n            return fc.options;\n        },\n        bus() {\n            return fc.bus;\n        },\n    })\n\n    this.initData(fc.rules);\n\n    this.$manager = new fc.manager(this);\n    this.$render = new Render(this);\n    this.api = fc.extendApi(Api(this), this);\n}\n\nextend(Handler.prototype, {\n    initData(rules) {\n        extend(this, {\n            ctxs: {},\n            fieldCtx: {},\n            nameCtx: {},\n            sort: [],\n            rules,\n        });\n    },\n    init() {\n        this.appendData = {...this.fc.options.formData || {}, ...this.vm.value || {}, ...this.appendData};\n        this.useProvider();\n        this.usePage();\n        this.loadRule();\n        this.$manager.__init();\n        this.vm.$set(this.vm, 'formData', this.formData);\n    },\n})\n\nuseInject(Handler);\nusePage(Handler);\nuseRender(Handler);\nuseLoader(Handler);\nuseInput(Handler);\nuseContext(Handler);\nuseLifecycle(Handler);\nuseEffect(Handler);\n","// https://github.com/ElemeFE/element/blob/dev/packages/upload/src/ajax.js\n\nfunction getError(action, option, xhr) {\n    const msg = `fail to ${action} ${xhr.status}'`;\n    const err = new Error(msg);\n    err.status = xhr.status;\n    err.url = action;\n    return err;\n}\n\nfunction getBody(xhr) {\n    const text = xhr.responseText || xhr.response;\n    if (!text) {\n        return text;\n    }\n\n    try {\n        return JSON.parse(text);\n    } catch (e) {\n        return text;\n    }\n}\n\nexport default function fetch(option) {\n    if (typeof XMLHttpRequest === 'undefined') {\n        return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    const action = option.action;\n\n    xhr.onerror = function error(e) {\n        option.onError(e);\n    };\n\n    xhr.onload = function onload() {\n        if (xhr.status < 200 || xhr.status >= 300) {\n            return option.onError(getError(action, option, xhr), getBody(xhr));\n        }\n\n        option.onSuccess(getBody(xhr));\n    };\n\n    xhr.open(option.method || 'get', action, true);\n\n    let formData;\n    if (option.data) {\n        if ((option.dataType || '').toLowerCase() !== 'json') {\n            formData = new FormData();\n            Object.keys(option.data).map(key => {\n                formData.append(key, option.data[key]);\n            });\n        } else {\n            formData = JSON.stringify(option.data);\n            xhr.setRequestHeader('content-type', 'application/json');\n        }\n    }\n\n\n    if (option.withCredentials && 'withCredentials' in xhr) {\n        xhr.withCredentials = true;\n    }\n\n    const headers = option.headers || {};\n\n    Object.keys(headers).forEach(item => {\n        if (headers[item] !== null) {\n            xhr.setRequestHeader(item, headers[item]);\n        }\n    });\n    xhr.send(formData);\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: ['vnode'],\n    render(h, ctx) {\n        return ctx.props.vnode ? ctx.props.vnode : ctx.children\n    }\n}\n","import toLine from '@form-create/utils/lib/toline';\nimport is from '@form-create/utils/lib/type';\nimport toString from '@form-create/utils/lib/tostring';\nimport extend from '@form-create/utils/lib/extend';\nimport Vue from 'vue';\n\nfunction parseProp(prop) {\n    if (is.String(prop))\n        return {domProps: {innerHTML: prop}};\n    return prop;\n}\n\nexport function CreateNodeFactory() {\n\n    const aliasMap = {};\n\n    function CreateNode(vm) {\n        vm && this.setVm(vm);\n    }\n\n    extend(CreateNode.prototype, {\n        setVm(vm) {\n            this.vm = vm;\n            this.$h = vm.$createElement;\n        },\n        make(tag, data, children) {\n            if (Vue.config.isReservedTag(tag) && data.nativeOn) delete data.nativeOn;\n            let Node = this.$h(tag, parseProp(data), children || []);\n            Node.context = this.vm;\n            return Node;\n        },\n        aliasMap\n    });\n\n    extend(CreateNode, {\n        aliasMap,\n        alias(alias, name) {\n            aliasMap[alias] = name;\n        },\n        use(nodes) {\n            Object.keys(nodes).forEach((k) => {\n                const line = toLine(k);\n                const lower = toString(k).toLocaleLowerCase();\n                const v = nodes[k];\n                [k, line, lower].forEach(n => {\n                    CreateNode.alias(k, v);\n                    CreateNode.prototype[n] = function (data, children) {\n                        return this.make(v, data, children);\n                    };\n                });\n            });\n        }\n    })\n\n    return CreateNode;\n}\n","import mergeProps from '@form-create/utils/lib/mergeprops';\nimport unique from '@form-create/utils/lib/unique';\nimport extend from '@form-create/utils/lib/extend';\n\nexport function createManager(proto) {\n    class CustomManager extends Manager {\n    }\n\n    Object.assign(CustomManager.prototype, proto);\n    return CustomManager;\n}\n\nexport default function Manager(handler) {\n    extend(this, {\n        $handle: handler,\n        vm: handler.vm,\n        options: {},\n        ref: 'fcForm',\n        mergeOptionsRule: {\n            normal: ['form', 'row', 'info', 'submitBtn', 'resetBtn']\n        }\n    });\n    this.updateKey();\n    this.init();\n}\n\nextend(Manager.prototype, {\n    __init() {\n        this.$render = this.$handle.$render;\n        this.$r = (...args) => this.$render.renderRule(...args);\n    },\n    updateKey() {\n        this.key = unique();\n    },\n    //TODO interface\n    init() {\n    },\n    update() {\n    },\n    beforeRender() {\n    },\n    form() {\n        return this.vm.$refs[this.ref];\n    },\n    mergeOptions(args, opt) {\n        return mergeProps(args.map(v => this.tidyOptions(v)), opt, this.mergeOptionsRule);\n    },\n    updateOptions(options) {\n        this.options = this.mergeOptions([options], this.getDefaultOptions());\n        this.update();\n    },\n    tidyOptions(options) {\n        return options;\n    },\n    tidyRule(ctx) {\n    },\n    mergeProp(ctx) {\n    },\n    getDefaultOptions() {\n        return {};\n    },\n    render(children) {\n    }\n})\n","import {err} from '@form-create/utils/lib/console';\nimport fetch from './fetch';\nimport {invoke} from './util';\nimport is from '@form-create/utils/lib/type';\nimport deepSet from '@form-create/utils/lib/deepset';\n\nconst $fetch = {\n    name: 'fetch',\n    loaded(...args) {\n        run(...args);\n    },\n    watch(inject, rule, api) {\n        if (!run(inject, rule, api)) {\n            inject.clearProp();\n            api.sync(rule);\n        }\n    }\n};\n\nfunction parseOpt(option) {\n    if (is.String(option)) {\n        option = {\n            action: option,\n            to: 'options'\n        }\n    }\n    return option;\n}\n\nfunction run(inject, rule, api) {\n    let option = inject.value;\n    if (is.Function(option)) {\n        option = option(rule, api);\n    }\n    option = parseOpt(option);\n    if (!option || !option.action) {\n        return false;\n    }\n    if (!option.to) {\n        option.to = 'options';\n    }\n    const onError = option.onError;\n\n    const check = () => {\n        if (!inject.getValue()) {\n            inject.clearProp();\n            api.sync(rule);\n            return true;\n        }\n    }\n\n    const set = (val) => {\n        if (val === undefined) {\n            inject.clearProp();\n            api.sync(rule);\n        } else {\n            deepSet(inject.getProp(), option.to, val);\n        }\n    }\n\n    invoke(() => fetch({\n        ...option,\n        onSuccess(body) {\n            if (check()) return;\n            set((option.parse || ((v) => v.data))(body, rule, api))\n            api.sync(rule);\n        },\n        onError(e) {\n            set(undefined)\n            if (check()) return;\n            (onError || ((e) => err(e.message || 'fetch fail ' + option.action)))(e, rule, api);\n        }\n    }));\n\n    return true;\n}\n\nexport default $fetch;\n","import $FormCreate from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from '../handler';\nimport fetch from './fetch';\nimport {creatorFactory} from '..';\nimport BaseParser from '../factory/parser';\nimport {copyRule, copyRules, mergeGlobal, parseJson, toJson, parseFn} from './util';\nimport fragment from '../components/fragment';\nimport is from '@form-create/utils/lib/type';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport {CreateNodeFactory} from '../factory/node';\nimport {createManager} from '../factory/manager';\nimport {arrayAttrs, keyAttrs, normalAttrs} from './attrs';\nimport {appendProto} from '../factory/creator';\nimport $fetch from './provider';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nfunction _parseProp(name, id) {\n    let prop;\n    if (arguments.length === 2) {\n        prop = arguments[1];\n        id = prop[name];\n    } else {\n        prop = arguments[2];\n    }\n    return {id, prop};\n}\n\nfunction nameProp() {\n    return _parseProp('name', ...arguments);\n}\n\nfunction _getEl(options) {\n    if (!options || !options.el) return window.document.body;\n    return is.Element(options.el)\n        ? options.el\n        : document.querySelector(options.el);\n}\n\nfunction mountForm(rules, option) {\n    const $vm = new _vue({\n        data() {\n            //todo 外部无法修改\n            return {rule: rules, option: option || {}};\n        },\n        render(h) {\n            return h('FormCreate', {ref: 'fc', props: this.$data});\n        }\n    });\n    $vm.$mount();\n    return $vm;\n}\n\nfunction exportAttrs(attrs) {\n    const key = attrs.key || [];\n    const array = attrs.array || [];\n    const normal = attrs.normal || [];\n    keyAttrs.push(...key);\n    arrayAttrs.push(...array);\n    normalAttrs.push(...normal);\n\n    appendProto([...key, ...array, ...normal]);\n}\n\n//todo 表单嵌套\nexport default function FormCreateFactory(config) {\n\n    const components = {\n        [fragment.name]: fragment\n    };\n    const parsers = {};\n    const directives = {};\n    const providers = {\n        fetch: $fetch\n    };\n    const maker = makerFactory();\n    let globalConfig = {global: {}};\n    const data = {};\n    const CreateNode = CreateNodeFactory();\n\n    exportAttrs(config.attrs || {});\n\n    function directive() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) directives[data.id] = data.prop;\n    }\n\n    function register() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) providers[data.id] = {...data.prop, name: data.id};\n    }\n\n    function componentAlias(alias) {\n        CreateNode.use(alias);\n    }\n\n    function parser() {\n        const data = nameProp(...arguments);\n        if (!data.id || !data.prop) return;\n        const name = toCase(data.id);\n        const parser = data.prop;\n        const base = parser.merge === true ? parsers[name] : undefined;\n        parsers[name] = {...(base || BaseParser), ...parser};\n        maker[name] = creatorFactory(name);\n        parser.maker && extend(maker, parser.maker);\n    }\n\n    function component(id, component) {\n        let name;\n        if (is.String(id)) {\n            name = toCase(id);\n            if (['form-create', 'formcreate'].indexOf(name) > -1) {\n                return $form();\n            } else if (component === undefined) {\n                return components[name];\n            }\n        } else {\n            name = toCase(id.name);\n            component = id;\n        }\n        if (!name || !component) return;\n        components[name] = component;\n        if (component.formCreateParser) parser(name, component.formCreateParser);\n    }\n\n    function $form() {\n        return _vue.extend($FormCreate(FormCreate));\n    }\n\n    function $vnode() {\n        return _vue.extend(fragment);\n    }\n\n    //todo 检查回调函数作用域\n    function use(fn, opt) {\n        if (is.Function(fn.install)) fn.install(create, opt);\n        else if (is.Function(fn)) fn(create, opt);\n        return this;\n    }\n\n    function create(rules, _opt, parent) {\n        let $vm = mountForm(rules, _opt || {});\n        const _this = $vm.$refs.fc.formCreate;\n        _this.$parent = parent;\n        _getEl(_this.options).appendChild($vm.$el);\n        return _this.api();\n    }\n\n    function factory() {\n        return FormCreateFactory(config);\n    }\n\n    function FormCreate(vm, rules, options) {\n        extend(this, {\n            vm,\n            create,\n            manager: createManager(config.manager),\n            parsers,\n            providers,\n            rules: Array.isArray(rules) ? rules : [],\n            prop: {\n                components,\n                directives,\n            },\n            CreateNode,\n            bus: new _vue,\n            unwatch: null,\n            extendApi: config.extendApi || (api => api)\n        })\n        this.init();\n        this.initOptions(options || {});\n    }\n\n    extend(FormCreate.prototype, {\n        init() {\n            const vm = this.vm;\n            const h = new Handle(this);\n            this.$handle = h;\n            vm.$f = h.api;\n            vm.$emit('input', h.api);\n\n            vm.$on('hook:created', () => {\n                if (this.isSub()) {\n                    this.unwatch = vm.$watch(() => vm.$pfc.option, () => {\n                        this.initOptions(this.options);\n                        vm.$f.refresh();\n                    }, {deep: true});\n                    this.initOptions(this.options);\n                }\n                this.created();\n            })\n            vm.$on('hook:mounted', () => {\n                this.mounted();\n            });\n            vm.$on('hook:beforeDestroy', () => {\n                vm.destroyed = true;\n                this.unwatch && this.unwatch();\n                h.reloadRule([]);\n            });\n            vm.$on('hook:updated', () => {\n                h.bindNextTick(() => this.bus.$emit('next-tick', h.api));\n            });\n        },\n        isSub() {\n            return this.vm.$pfc && this.vm.extendOption;\n        },\n        initOptions(options) {\n            this.options = {formData: {}, submitBtn: {}, resetBtn: {}, ...deepCopy(globalConfig)};\n            if (this.isSub()) {\n                this.mergeOptions(this.options, this.vm.$pfc.$f.config || {}, true);\n            }\n            this.updateOptions(options);\n        },\n        mergeOptions(target, opt, parent) {\n            opt = deepCopy(opt);\n            parent && ['page', 'onSubmit', 'mounted', 'reload', 'formData', 'el'].forEach((n) => {\n                delete opt[n];\n            });\n            if (opt.global) {\n                target.global = mergeGlobal(target.global, opt.global);\n                delete opt.global;\n            }\n            this.$handle.$manager.mergeOptions([opt], target);\n            return target;\n        },\n        updateOptions(options) {\n            this.mergeOptions(this.options, options);\n            this.$handle.$manager.updateOptions(this.options);\n        },\n        created() {\n            this.$handle.init();\n            this.vm.$emit('created', this.api());\n        },\n        api() {\n            return this.$handle.api;\n        },\n        render() {\n            return this.$handle.render();\n        },\n        mounted() {\n            this.$handle.mounted();\n        },\n    })\n\n\n    function useAttr(formCreate) {\n        extend(formCreate, {\n            version: config.version,\n            ui: config.ui,\n            data,\n            maker,\n            component,\n            directive,\n            register,\n            $vnode,\n            parser,\n            use,\n            factory,\n            componentAlias,\n            copyRule,\n            copyRules,\n            fetch,\n            $form,\n            parseFn,\n            parseJson,\n            toJson,\n            init(rules, _opt = {}) {\n                let $vm = mountForm(rules, _opt), _this = $vm.$refs.fc.formCreate;\n                return {\n                    mount($el) {\n                        if ($el && is.Element($el))\n                            _this.options.el = $el;\n                        _getEl(_this.options).appendChild($vm.$el);\n                        return _this.api();\n                    },\n                    remove() {\n                        $vm.$el.parentNode && $vm.$el.parentNode.removeChild($vm.$el);\n                    },\n                    destroy() {\n                        this.remove();\n                        $vm.$destroy();\n                    },\n                    $f: _this.api()\n                };\n            }\n        });\n    }\n\n    function useStatic(formCreate) {\n        extend(formCreate, {\n            create,\n            install(Vue, options) {\n                globalConfig = {...globalConfig, ...(options || {})}\n                if (Vue._installedFormCreate === true) return;\n                Vue._installedFormCreate = true;\n                _vue = Vue;\n\n                const $formCreate = function (rules, opt = {}) {\n                    return create(rules, opt, this);\n                };\n\n                useAttr($formCreate);\n\n                Vue.prototype.$formCreate = $formCreate;\n                Vue.component('FormCreate', $form());\n                Vue.component('FcFragment', $vnode());\n            }\n        })\n    }\n\n    useAttr(create);\n    useStatic(create);\n\n    CreateNode.use({fragment: 'fcFragment'});\n\n    if (config.install) create.use(config);\n\n    return create;\n}\n"],"names":["$set","target","field","value","Vue","set","$del","_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","extend","apply","this","NAME","$FormCreate","FormCreate","name","componentName","model","prop","provide","$pfc","inject","props","rule","type","Array","required","option","extendOption","Boolean","api","data","formData","undefined","destroyed","validate","$f","isShow","unique","renderRule","ctxInject","updateValue","render","formCreate","methods","_refresh","_renderRule","_updateValue","JSON","stringify","$emit","watch","handler","n","setValue","deep","initOptions","refresh","every","v","_this","indexOf","$handle","reloadRule","beforeCreate","$options","propsData","keys","forEach","k","_this2","is","arg","toString","Undef","Element","_typeof","nodeType","trueArray","isArray","hasProperty","t","normalMerge","toArrayMerge","functionalMerge","mergeProps","objects","initial","opt","_normalMerge","_toArrayMerge","_functionalMerge","propsMerge","reduce","key","arrA","arrB","event","hook","mergeFn","fn1","fn2","keyAttrs","arrayAttrs","normalAttrs","attrs","format","msg","getRule","tip","console","warn","err","error","logError","e","deepExtend","origin","mode","isArr","clone","nst","_clone","__json","__origin","filter","__ctrl","deepCopy","PREFIX","SUFFIX","$T","$TX","FUNCTION","toJson","obj","space","val","_isVue","__emit","makeFn","fn","eval","parseFn","String","trim","flag","replace","__inject","parseJson","json","parse","enumerable","writable","configurable","copyRule","copyRules","rules","mergeRule","merge","array","normal","Function","mergeGlobal","funcProxy","that","proxy","defineProperties","get","byCtx","__fc__","__origin__","invoke","def","baseRule","on","options","children","hidden","display","creatorFactory","init","title","maker","Creator","_data","appendProto","setProp","constructor","commonMaker","create","make","createTmp","template","vm","makerFactory","factory","copy","Api","h","tidyFields","fields","getCtxs","ctx","$render","clearCache","allSubForm","subs","subForm","sub","push","form","id","getFieldCtx","appendData","getValue","coverValue","deferSyncValue","ctxs","fieldCtx","removeField","getCtx","rm","removeRule","destroy","$el","parentNode","removeChild","$destroy","append","after","child","index","sort","root","splice","prepend","state","hiddenStatus","displayStatus","disabled","all","map","component","nameCtx","bind","reload","updateOptions","fc","onSubmit","sync","deleted","clearCacheAll","refreshOptions","$manager","hideForm","hide","changeStatus","clearChangeStatus","updateRule","updateRules","mergeRules","updateValidate","updateValidates","validates","refreshValidate","resetFields","defaultValue","refreshControl","method","el","Error","exec","args","trigger","$refs","ref","closeModal","getSubForm","nextTick","bus","$once","nextRefresh","emit","helper","changeValue","changeField","useCache","Render","initCache","cache","use","parent","setCache","vnode","slot","getCache","toCase","str","lower","toLocaleUpperCase","toLowerCase","toArray","toLine","line","toLocaleLowerCase","substr","uniqueId","Math","random","Number","Date","now","deepSet","idx","to","split","useRender","initRender","tempList","clearOrgChildren","initOrgChildren","orgChildren","parser","loadChildren","getTypeSlot","_fn","$scopedSlots","vn","$h","$createElement","beforeRender","renderList","renderSlot","renderName","renderId","renderField","container","renderCtx","makeVm","_this3","getInjectData","g","global","cacheConfig","originType","trueType","setOptions","optionsTo","setTempProps","$props","injectProp","injectKeys","renderTemp","compile","$nextTick","mounted","input","$on","_this4","onInput","parseSide","side","renderSides","temp","prefix","suffix","_this5","preview","cacheFlag","_type","none","renderChildren","initProp","tidyRule","ctxProp","formCreateInject","makeWrap","item","_this6","style","_this7","addSubForm","custom","mergeProp","_this8","onMounted","getFormData","callback","expression","__rule__","effect","isRm","_this9","rmCtx","defaultRender","vNode","alias","aliasMap","_this10","handle","CreateNode","useInject","Handler","parseInjectEvent","injectEvent","parseEventLst","parseEvent","parseEmit","emitPrefix","emitKey","eventName","eventInject","fieldKey","_inject","computed","self","watching","loading","unshift","EVENT","usePage","page","first","limit","getLimit","parseInt","pageEnd","pageLoad","pageFn","$off","loadRule","ceil","clearNextTick","clearTimeout","bindNextTick","setTimeout","loadedId","RuleContext","wrapRef","linkOn","ctrlRule","payload","updateType","updateKey","update","useLoader","parseRule","_rule","fullRule","appendValue","loadFn","loadCtrl","control","ctrl","syncProp","pre","fapi","cycleLoad","_loadRule","syncForm","isRepeat","ruleEffect","repeat","isCopy","isInit","check","isCtrl","bindParser","setCtx","_preIndex","preIndex","i","r","updated","refreshUpdate","defineProperty","valueHandle","useCtrl","controls","getCtrl","handleFn","valid","findCtrl","isHidden","reverse","ruleCon","ctrlCtx","_reloadRule","initData","reloading","nextReload","useInput","cacheValue","toValue","formValue","setFlag","setFormData","syncValue","valueChange","isQuote","isChange","toEmpty","toFormValue","deferSyncFn","strFn","refreshRule","appendLink","link","effectData","clearEffectData","setParser","unwatch","un","unlink","watchTo","watchCtx","rmCtrl","$api","_rm","noWatch","getType","BaseParser","useContext","getNameCtx","setIdCtx","rmIdCtx","lst","isMounted","getParser","list","parsers","noWatchFn","$watch","o","rmSub","watchEffect","useLifecycle","_mounted","lifecycle","useEffect","useProvider","ps","providers","_c","getComponent","onEffect","provider","used","_used","emitEffect","getEffect","attr","p","getProp","clearProp","arr","components","manager","extendApi","getError","action","xhr","status","url","getBody","text","responseText","response","fetch","XMLHttpRequest","onerror","onError","onload","onSuccess","open","dataType","FormData","setRequestHeader","withCredentials","headers","send","__init","functional","parseProp","domProps","innerHTML","CreateNodeFactory","setVm","tag","config","isReservedTag","nativeOn","Node","context","nodes","createManager","proto","CustomManager","Manager","mergeOptionsRule","$r","mergeOptions","tidyOptions","getDefaultOptions","$fetch","loaded","run","parseOpt","body","message","_vue","window","_parseProp","nameProp","_getEl","document","querySelector","mountForm","$vm","$data","$mount","exportAttrs","FormCreateFactory","fragment","directives","globalConfig","directive","register","componentAlias","base","$form","formCreateParser","$vnode","install","_opt","$parent","appendChild","useAttr","version","ui","mount","remove","Handle","isSub","created","submitBtn","resetBtn","_installedFormCreate","$formCreate"],"mappings":"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"}